class _5546
{
	static _5643(_1775, _3219)
	{
		let _305 = new _3013();
		_1775.push(_305);
		_305._1784 = _3219;
		_305._1787 = _3219;
		_305._3017 = 500;
		let _5300;
		_5300 = _1665._5281(_3219);
		_305._3022 = _5300._3289;
		_305._3023 = false;
		_305._3024 = false;
		return _305;
	}
	static _5644 =
		[
			
			
			["_7839", "过度到附属独立浊辅音_然后过度"],
			
			["_7840", "附属独立浊辅音_然后过度"],
			
			
			["_7841", "过度到附属独立浊辅音_后跟两个浊辅音_然后过度"],
			
			["_7842", "附属独立浊辅音_后跟浊辅音1_然后过度"],
			
			["_7843", "附属独立浊辅音_后跟浊辅音2_然后过度"],



			
			
			["_7844", "附属爆破浊辅音_然后过度"],
			
			
			["_7845", "附属爆破浊辅音_后跟元音_然后过度"],

			
			
			["_7846", "附属爆破浊辅音_后跟浊辅音_然后过度"],
			
			
			["_7847", "附属爆破浊辅音_后跟元音_后跟浊辅音_然后过度"],

			
			
			
			
			["_7848", "附属跟随者浊辅音_然后过度"],



			
			
			["_7849", "附属破擦声带音没有元音_然后过度"],
			
			
			["_7850", "附属破擦声带音后跟元音_然后过度"],
			
			["_5858", "附属不送气破擦音后部_然后过度"]
		];
	static _5645(_5646)
	{
		for (let _754 = 0; _754 < this._5644.length; _754++)
		{
			let _5647 = this._5644[_754];
			if (_5647[1] == _5646)
				return _5647[0];
		}
		return null;
	}
	static _5648(_5649)
	{
		for (let _754 = 0; _754 < this._5644.length; _754++)
		{
			let _5647 = this._5644[_754];
			if (_5647[0] == _5649)
				return _5647[1];
		}
		return null;
	}
	static _5563(_5650)
	{
		for (let _754 = 0; _754 < this._5644.length; _754++)
		{
			let _5647 = this._5644[_754];
			if (_5647[0] == _5650)
				return true;
			if (_5647[1] == _5650)
				return true;
		}
		return false;
	}
	
	
	static _5651(_5652, _5653)
	{
		let _5654 = _5652._3034;
		let _5655 = _5653._3034;
		[_5654._5656, _5654._5657] = _3035._5658(_5654._5656, _5654._5657, _5655._5659, _5655._5660);
		_5654._5661 = _5655._5662;
	}
	static _5663(_5652, _5653)
	{
		let _5654 = _5652._3034;
		let _5655 = _5653._3034;
		[_5655._5659, _5655._5660] = _3035._5658(_5655._5659, _5655._5660,_5654._5656, _5654._5657);
		_5655._5662=_5654._5661;
	}
	static _5664(_5652)
	{
		let _5654 = _5652._3034;
		if (_5654._5661 != 0)
		{
			_5654._5656 = -0.2;
			_5654._5657 = 0;
			_5654._5661 = 0;
		}
	}
	static _5665(_1772)
	{
		
		let _5562;
		_5562 = _1772._1778;
		for (let _754 = 0; _754 < _5562.length; _754++)
		{
			let _305 = _5562[_754];
			if (_5546._5563(_305._3022))
				return _305;
		}
		return null;
    }
	static _5547(_1772)
	{
		let _5666;
		if (!(_5666 = this._5665(_1772)))
			return;
		_5546._5651(_5666, _1772._1780);
	}
	static _5564(_1772)
	{
		let _5666;
		if (!(_5666 = this._5665(_1772)))
			return;
		_5546._5663(_5666, _1772._1780);
	}
	static _5667(_1772)
	{
		let _5666;
		if (!(_5666 = this._5665(_1772)))
			return;
		_5546._5664(_5666);
	}
	static _5593(_5581, _5668, _5669, _359)
	{
		if (!_359)
			return;
		let _5670;
		_5670 = _359._3130;
		if (_5670 == -1)
			return;
		let _5671;
		_5671 = _359._3131;
		if (_5671 == -1)
			return;
		let _5672;
		_5672 = _5668[_5671];
		let _5387;
		_5387 = _359._3132;
		if (_5387 == 0)
			return;
		let _5472;
		_5472 = _5581[_5581.length - 1];
		if (_5669 == _5670)
		{
			if (_5669 == 0)
			{
				_5472._1785 = _5672;
				_5472._3014 = _5387;
			}
			else
			{
				_5472._1788 = _5672;
				_5472._3016 = _5387;
			}
		}
	}
}

