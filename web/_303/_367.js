
class _5960
{
    _5947 = -1;
    _5948 = -1;
    _5949 = null;

    _5950 = -1;
    _5951 = -1;
    _5952 = null;
}

class _5942
{
    static _1626(_1775, _754, _5961, _5962)
    {
        let _5941 = new _5960();
        let _305 = _1775[_754];
        let _5362 = _305._3030;
        let _5363 = _305._3032;
        if (_305._3022 == "过度声带音")
        {
            let _1236;
            _1236 = new Array();
            _1236.length = _5363 - _5362 + 1;
            _1236.fill(1);
            _5941._5947 = _5362;
            _5941._5948 = _5363;
            _5941._5949 = _1236;
            return _5941;
        }

        
        do
        {
            let _5963, _5964;
            _5963 = -1;
            for (let _4859 = 0; _4859 < _1775.length; _4859++)
            {
                let _5859 = _1775[_4859];
                let _3289 = _5859._3022;
                if (_3289 != "爆破声带音" && _3289 != "英语bglr爆破音" && _3289 != "浊辅音" && _3289 != "清辅音后的浊辅音" && _3289 != "不送气破擦音后部" && _3289 != "普通声带音" && _3289 != "_7754" && _3289 != "浊辅音过度到元音" && _3289 != "_5802" && _3289 != "英语bglr过度音")
                {
                    if (_5963 != -1)
                        break;
                    else
                        continue;
                }
                if (_5963 == -1)
                    _5963 = _4859;
                _5964 = _4859;
            }
            if (_5963 == -1)
                break;
            if (_5963 != _754)
                break;
            let _5965 = _5963;
            let _5966 = _5964;
            let _5967 = 0;
            for (let _2005 = _5965; _2005 <= _5966; _2005++)
            {
                let _5968 = _1775[_2005];
                if (_2005 != _5966)
                    if (!_5968._3024)
                        console.assert(0);
                if (_2005 != _5965)
                    if (!_5968._3023)
                        console.assert(0);
                _5967 += _5968._3017;
            }
            let _5969, _5970;
            _5969 = _1775[_5965];
            _5970 = _1775[_5966];
            let _5971 = _5969._3022;
            let _5972 = _5970._3022;
            let _5973;
            if (_5969._3023)
            {
                _5973 = 0;
            }
            else
            {
                switch (_5971)
                {
                    case "普通声带音":
                    case "浊辅音":
                    case "清辅音后的浊辅音":
                        _5973 = _5967 * 0.2;
                        break;
                    case "爆破声带音":
                    case "英语bglr爆破音":
                        _5973 = _5967 * 0.1;
                        break;
                    default:
                        _5973 = 0;
                        break;
                }
            }
            let _5974;
            if (_5970._3024)
            {
                _5974 = 0;
            }
            else
            {
                switch (_5972)
                {
                    case "普通声带音":
                    case "浊辅音":
                    case "清辅音后的浊辅音":
                    case "爆破声带音":
                        _5974 = _5967 * 0.2;
                        break;
                    default:
                        _5974 = 0;
                        break;
                }
            }
            let _5947, _5948;
            _5947 = _5362;
            _5948 = _5970._3032;
            function _5975(_5976)
            {
                return Math.round(_581._761(_5947, _5948 + 1, 0., _5967, _5976));
            }

            let _5977, _5978;
            let _5979;
            if (_5973 == 0 || (!_5961))
            {
                _5977 = _5978 = _5947;
                _5979 = new Array();
            }
            else
            {
                _5977 = _5947;
                _5978 = _5975(_5973) - 1;
                let _746 = new _718();
                _5961._5504(_746);
                _5979 = _746._762(_5977, _5978);
            }


            let _5980, _5981, _5982;
            if (_5974 == 0 || (!_5962))
            {
                _5980 = _5981 = _5948;
                _5982 = new Array();
            }
            else
            {
                _5980 = _5975(_5967 - _5974) - 1;
                _5981 = _5948;
                let _746 = new _718();
                _5962._5504(_746);
                _5982 = _746._762(_5980, _5981);
            }

            let _5983;
            _5983 = new Array();
            let _5984;
            _5984 = _5981 - _5977 + 1;
            _5984 -= _5979.length;
            _5984 -= _5982.length;
            _5983.length = _5984;
            _5983.fill(1);

            let _5985;
            _5985 = [..._5979, ..._5983, ..._5982];

            _5941._5947 = _5977;
            _5941._5948 = _5981;
            _5941._5949 = _5985;
        }
        while (0);

        
        {
            let _5986;
            if (_5986 = _5855(_1775, _754))
            {
                let _1611 = _5986._1611;
                let _5845 = _5986._5845;
                let _5846 = _5986._5846;
                let _5987, _5988;
                let _5859;
                if (_5986._5851)
                {
                    _5859 = _1775[_754 - 1];
                    _5987 = _5859._3030;
                    _5988 = _5859._3032;
                }
                else
                {
                    _5859 = _305;
                    _5987 = _5362;
                    _5988 = _5363;
                }
                let _5459;
                _5459 = Math.round((_5859._3033 - _5859._3031) * _1611 / _5859._3017);
                _5988 = _5987 + _5459 - 1;
                let _746 = new _718();
                if (_5845)
                {
                    _5845._5504(_746);
                    _5941._5950 = _5987;
                    _5941._5951 = _5988;
                    _5941._5952 = _746._762(_5987, _5988);
                }
                if (_5846)
                {
                    if (_5986._5853)
                        _5846._5885(_746);
                    else if (_5986._5854)
                        _5846._5886(_746);
                    else
                        _5846._5504(_746);
                    _5941._5947 = _5987;
                    _5941._5948 = _5988;
                    _5941._5949 = _746._762(_5987, _5988);
                }
            }
        }
        

        return _5941;
    }
}
