class _2440
{
    static _2441(_1236, _1013, _2442)
    {
        for (let _979 = 0; _979 < _1013; _979++)
        {
            let _2443;
            _2443 = _1236.slice();
            let _2444, _2445;
            _2444 = 0;
            _2445 = _2443.length - 1;
            for (let _2446 = _2444; _2446 <= _2445; _2446++)
            {
                let _2447, _2448;
                _2447 = _2446 - _2442;
                if (_2447 < _2444)
                    _2447 = _2444;
                _2448 = _2446 + _2442;
                if (_2448 > _2445)
                    _2448 = _2445;
                let _2449;
                _2449 = _2446 - _2447;
                let _2450;
                _2450 = _2448 - _2446;
                let _2451;
                _2451 = Math.min(_2449, _2450);
                _2447 = _2446 - _2451;
                _2448 = _2446 + _2451;
                let value;
                value = 0;
                for (let _2452 = _2447; _2452 <= _2448; _2452++)
                    value += _2443[_2452];
                value /= (_2448 - _2447 + 1);
                _1236[_2446] = value;
            }
        }
    }
    static _2453(_1236)
    {
        function _2454(_754)
        {
            return _1236[_754] == -1;
        };
        function _2455()
        {
            for (let _754 = 0; _754 < _1236.length; _754++)
                _1236[_754] = 0.5;
        }
        function _2456(_2457)
        {
            let _623;
            _623 = _1236[_2457];
            for (let _754 = 0; _754 < _2457; _754++)
                _1236[_754] = _623;
        };
        function _2458(_1370)
        {
            let _623;
            _623 = _1236[_1370];
            for (let _754 = _1370 + 1; _754 < _1236.length; _754++)
                _1236[_754] = _623;
        }
        function _2459(_1370, _2457)
        {
            let _1371, _1372;
            _1371 = _1236[_1370];
            _1372 = _1236[_2457];
            for (let _754 = _1370 + 1; _754 < _2457; _754++)
                _1236[_754] = _581._761(_1371, _1372, _1370, _2457, _754);
        };

        let _570;
        for (_570 = 0; _570 < _1236.length; _570++)
            if (!_2454(_570))
                break;
        if (_570 >= _1236.length)
        {
            _2455();
            return;
        }
        let _2460;
        _2460 = _570;
        _2456(_2460);

        for (_570 = _1236.length - 1; _570 >= 0; _570--)
            if (!_2454(_570))
                break;
        let _2399;
        _2399 = _570;
        _2458(_2399);

        if (_2460 == _2399)
            return;

        for (let _570 = _2460; _570 <= _2399; _570++)
        {
            for (; _570 <= _2399; _570++)
                if (_2454(_570))
                    break;
            if (_570 >= _1236.length)
                break;
            let _2461;
            _2461 = _570;

            for (_570++; _570 <= _2399; _570++)
                if (!_2454(_570))
                    break;
            if (_570 > _2399)
                console.assert(0);

            let _2462;
            _2462 = _570 - 1;

            let _2463;
            _2463 = _2461 - 1;
            let _2464;
            _2464 = _2462 + 1;

            _2459(_2463, _2464);
        }
    }
    static _2465()
    {
        let _1013;
        _1013 = 10;
        let _1902;
        _1902 = parent._585;
        let _2466 = new Array();
        for (let _620 = 0; _620 < _1902.length; _620++)
        {
            let _445;
            _445 = _1902[_620];
            if (_445._1137)
                continue;
            let _270;
            _270 = _445._1138;
            if (_270._2467)
                _2466.push(-1);
            else
                _2466.push(_270._2434);
        }
        this._2453(_2466);
        
        for (let _620 = 0, _2468 = 0; _620 < _1902.length; _620++)
        {
            let _445;
            _445 = _1902[_620];
            if (_445._1137)
                continue;
            let _270;
            _270 = _445._1138;
            if (_270._2467)
                _270._2434 = _2466[_2468];
            _2468++;
        }
    }

    static _261()
    {
        let _1902;
        _1902 = parent._585;
        let _1984;
        _1984 = _1011._1985(_1902);
        for (let _1981 = 0; _1981 < _1984; _1981++)
        {
            let _2116;
            _2116 = document.getElementById("_7628" + _1981);
            _2116.innerHTML = "&nbsp;";
            _2116.title = "";
        }
    }
    static _1980(_1981, _1962)
    {
        let _2116;
        _2116 = document.getElementById("_7628" + _1981);
        
        _1978(_2116, "⬆&nbsp;&nbsp;" + _1962);
        _1979();
    }
    static _2117(_1962)
    {
        let _1902;
        _1902 = parent._585;
        let _1984;
        _1984 = _1011._1985(_1902);
        if (_1984 <= 0)
            return;
        let _2116;
        _2116 = document.getElementById("_7628" + (_1984 - 1));
        _1978(_2116, _1962);
        
        _1979();
    }

    static _2469 = 20;
    static _612()
    {
        let _1902;
        _1902 = parent._585;

        if (_1902.length == 0)
        {
            _1906("&nbsp;");
            return;
        }

        let _824;
        _824 = "";
        _824 += "<div style='text-align:center;width:100%;'>\r\n";
        _824 += "<div id='_2472' style='text-align: left; text-indent: 2em; display: inline-block;'>\r\n";
        _824 += "<div>\r\n";
        _824 += L("在这里手工编辑势，机器会根据‘势’的信息，半自动谱曲。");
        _824 += "</div>\r\n";

        _824 += "<div>\r\n";
        _824 += L("一首歌从整体上看，有一个整体变化，叫做“势”，可以在这里编辑势。");
        _824 += "<span style='background-color: rgba(0 0 255 / 0.1);'>"+L("势小，控件靠左，冷色调，音量低，音符频率低，一句话音符频率相差不大；") + "</span>";
        _824 += "<span style='background-color: rgba(255 0 128 / 0.08);'>" + L("势大，控件靠右，暖色调，音量大，音符频率大，一句话音符频率变化。") + "</span>";
        _824 += "</div>\r\n";

        _824 += "<div>\r\n";
        _824 += L("普通的自然段，正常显示；");
        _824 += "<span style='font-weight: bold;'>" + L("高潮自然段加粗。") + "</span>";
        _824 += "</div>\r\n";
        _824 += "</div><br/><br/><br/>\r\n";

        _824 += "<div id='_2477' style='display: inline-block; overflow: hidden; white-space: nowrap; '>";
        _824 += "<span id='_2473' style='position: relative; text-align: left; display: inline-block;vertical-align:top;'>";
        let _2075, _2470;
        _2075 = _2470 = 0;
        for (let _620 = 0; _620 < _1902.length; _620++)
        {
            let _445;
            _445 = _1902[_620];
            if (_445._1137)
                continue;
            let _1914;
            _1914 = _1011._1915(_1902, _445);
            let _270;
            _270 = _445._1138;
            if (_2470 != 0 && _270._1139)
            {
                _824 += "<div id='_7628" + _2075 + "' style='width: 100%;'>&nbsp;</div>\r\n";
                _2075++;
            }
            let _93;
            _93 = _1141._1142(_445);
            _824 += "<div id='_7629" + _620 + "' style='width:100%;" + (_1914 ? "font-weight: bold;" : "")+"'>" + _93 + "</div>\r\n";
            _2470++;
        }
        _824 += "<div id='_7628" + _2075 + "' style='width:100%;'>&nbsp;</div>\r\n";
        _824 += "</span>";
        _824 += "<svg id='_2478' style='position: relative; vertical-align: top;' xmlns='http://www.w3.org/2000/svg' version='1.1'></svg>";
        _824 += "<svg id='_2479' style='position: relative; vertical-align: top;' xmlns='http://www.w3.org/2000/svg' version='1.1'></svg>";
        _824 += "</div><br/><br/>\r\n";
        _824 += "<span id='_2471' style='text-align:left; display: inline-block;'>\r\n";
        _824 += "   <div>" + L("势的建议有：") +"</div>\r\n";
        _824 += "   <ul style='margin-bottom: 0px; margin-top: 0px;'>\r\n";
        _824 += "      <li>\r\n";
        _824 += "         " + L("一般情况下，一首歌曲中，为了获得对比，从而得到美感；总有一句歌词势最小，一句歌词势最大。按下“轨到轨”按钮可以自动实现。") +"\r\n";
        _824 += "         " + "<span style='cursor: pointer; color: blue; text-decoration: underline; white-space: nowrap;' onclick='_2440._2499();'>" + L("检测") + "</span>\r\n";
        _824 += "         " + "<span style='cursor: pointer; color: blue; text-decoration: underline; white-space: nowrap;' onclick='_2440._2497();'>" + L("实现轨到轨") + "</span>\r\n";
        _824 += "      </li>\r\n";
        _824 += "      <li>\r\n";
        _824 += "         " + L("一个自然段中，势逐渐变大。高潮段、结束的自然段，最后几句可能势减少。") +"\r\n";
        _824 += "         " + "<span style='cursor: pointer; color: blue; text-decoration: underline; white-space: nowrap;' onclick='_2440._2500();'>" + L("检测") + "</span>\r\n";
        _824 += "      </li>\r\n";
        _824 += "      <li>\r\n";
        _824 += "         " + L("高潮自然段势最大。");
        _824 += "         " + "<span style='cursor: pointer; color: blue; text-decoration: underline; white-space: nowrap;' onclick='_2440._2510();'>" + L("检测") + "</span>\r\n";
        _824 += "      </li>\r\n";
        _824 += "   </ul>\r\n";
        _824 += "</span><br/>\r\n";

        _824 += "</div>\r\n";
        _1906(_824);
        _1907(_2471, _2472, _2473);
        let _2474;
        _2474 = _2473.getBoundingClientRect();
        let _2475;
        _2475 = _2474.width;
        {
            let _2476;
            _2476 = _2475 + this._2469 * 2;
            _2477.style.width = _2478.style.width = _2479.style.width = _2476 + "px";
            _2473.style.left = this._2469 + "px";
            _2478.style.left = (-_2475) + "px";
            _2479.style.left = (-_2475 - _2476)+"px";
        }

        let _2480;
        _2480 = _2474.height;
        if (_2075 + _2470)
            _2480 *= (_2075 + _2470 - 1) / (_2075 + _2470);
        if (_2480 < 20)
            _2480 = 20;
        _2477.style.height = _2478.style.height = _2479.style.height = _2480 + "px";

        _2474 = _2473.getBoundingClientRect();
        let _488;
        _488 = "";
        let _2481 = new Array();
        let _2482 = new Array();
        for (let _620 = 0; _620 < _1902.length; _620++)
        {
            let _445;
            _445 = _1902[_620];
            if (_445._1137)
                continue;
            let _2483;
            _2483 = document.getElementById("_7629" + _620);
            let _2484;
            _2484 = _2483.getBoundingClientRect();
            let _2485;
            _2485 = _2484.top - _2474.top;
            _2485 += _2484.height / 2;
            let _270;
            _270 = _445._1138;
            let _2433;
            _2433 = _270._2434;
            let _2486;
            _2486 = _270._2467;
            let _1365, _1366, _2487;
            [_1365, _1366, _2487] = _581._1353(_2433,false,true);
            _2483.style.backgroundColor = "rgb(" + _1365 + " " + _1366 + " " + _2487 +" / 0.2)";
            let _2488;
            _2488 = this._2469 + _2475 * _2433;
            if (_2486)
                _488 += " <circle cx = '" + _2488 + "' cy = '" + _2485 + "' r = '6' style = 'fill: rgb(0 0 0 /0.1); stroke: rgb(0 0 0 / 0.6); stroke-width:1; cursor: grabbing;' ondblclick = '_2440._2492(" + _620 + ");event.preventDefault();' onmouseover =\"_218('" + L("自动，双击切换到手动") + "');\" />\r\n";
            else
                _488 += " <circle cx = '" + _2488 + "' cy = '" + _2485 + "' r = '7' style = 'fill: rgb(0 0 0 /0.1); stroke: rgb(100 100 255 / 1);       stroke-width:3; cursor: e-resize;' ondblclick = '_2440._2493(" + _620 + ");event.preventDefault();' onmouseover =\"_218('" + L("双击切换到自动") + "');\"  onmousedown='_2440._2494(" + _620 + ");' />\r\n";

            _2481.push(-1);
            _2481.push(-1);
            _2481.push(_2485);
            _2481.push(-1);
            _2481.push(-1);

            _2482.push(-1);
            _2482.push(-1);
            _2482.push(_2488);
            _2482.push(-1);
            _2482.push(-1);
        }
        _2479.innerHTML = _488;

        this._2453(_2482);
        this._2441(_2482,1,1);
        _2481[0] = 0;
        _2481[_2481.length - 1] = _2480;
        this._2453(_2481);
        let _2489;
        _2489 = "";
        _2489 += "<polyline  points='";
        _2489 += this._2469 + ",0 ";
        for (let _2490 = 0; _2490 < _2481.length; _2490++)
        {
            let _2488, _2485;
            _2488 = _2482[_2490];
            _2485 = _2481[_2490];
            _2489 += (_2488 + "," + _2485 + " ");
        }
        _2489 += this._2469 + "," + _2480 + " ";
        _2489 += "' style='fill: rgb(255 255 255 / 0.4 ); stroke: rgb(100 100 255 / 1); stroke-width: 1;' />\r\n";
        _2478.innerHTML = _2489;
    }
    static _2491()
    {
        return parseInt(_2479.style.width) - this._2469 * 2;
    }
    static _2492(_620)
    {
        let _1902;
        _1902 = parent._585;
        _1902[_620]._1138._2467 = false;
        this._2465();
        this._612();
    }
    static _2493(_620)
    {
        let _1902;
        _1902 = parent._585;
        _1902[_620]._1138._2467 = true;
        this._2465();
        this._612();
    }

    static _2097;
    static _2098;
    static _2099;
    static _2100;
    static _2494(_620)
    {
        let _1902;
        _1902 = parent._585;

        _581._1307();
        this._2097 = event.clientX;
        this._2099 = _1902[_620]._1138._2434;
        this._2100 = _620;
        window.onmousemove = _2440._2495.bind(this);
        window.onmouseup = _2440._2496.bind(this);
    }
    static _2495()
    {
        let _1902;
        _1902 = parent._585;
        let _2475 = this._2491();

        let _2106;
        _2106 = event.clientX - this._2097;
        _2106 /= _2475;
        if (_2106 == 0)
            return;
        let _2107;
        _2107 = this._2099 + _2106;
        if (_2107 < 0)
            _2107 = 0;
        else if (_2107 > 1)
            _2107 = 1;
        let _270;
        _270 = _1902[this._2100]._1138;
        if (_270._2434 == _2107)
            return;
        _270._2434 = _2107;

        this._2465();
        this._612();
    }
    static _2496()
    {
        window.onmousemove = null;
        window.onmouseup = null;
        this._2100 = -1;
    }

    static _2497()
    {
        let _1902;
        _1902 = parent._585;
        let _2498, _1739;
        _2498 =1e00;
        _1739 =-1e00;
        for (let _620 = 0, _2470 = 0; _620 < _1902.length; _620++)
        {
            let _445;
            _445 = _1902[_620];
            if (_445._1137)
                continue;
            let _270;
            _270 = _445._1138;
            let _2433;
            _2433 = _270._2434;
            if (_2433 < _2498)
                _2498 = _2433;
            if (_2433 > _1739)
                _1739 = _2433;
        }
        if (!(_1739 > _2498))
            return;
        for (let _620 = 0, _2470 = 0; _620 < _1902.length; _620++)
        {
            let _445;
            _445 = _1902[_620];
            if (_445._1137)
                continue;
            let _270;
            _270 = _445._1138;
            let _2433;
            _2433 = _270._2434;
            _2433 = _581._761(0., 1., _2498, _1739, _2433);
            _270._2434 = _2433;
        }
        this._612();
    }
    static _2499()
    {
        let _1902;
        _1902 = parent._585;
        let _2498, _1739;
        _2498 = 1e00;
        _1739 = -1e00;
        for (let _620 = 0, _2470 = 0; _620 < _1902.length; _620++)
        {
            let _445;
            _445 = _1902[_620];
            if (_445._1137)
                continue;
            let _270;
            _270 = _445._1138;
            let _2433;
            _2433 = _270._2434;
            if (_2433 < _2498)
                _2498 = _2433;
            if (_2433 > _1739)
                _1739 = _2433;
        }
        if (_1739 == 1 && _2498 == 0)
            _2031(L("已经实现轨到轨"));
        else
            this._2117(L("没有实现轨到轨，最小值（应该是0）：") + _2498 + L("最大值（应该是1）：") + _1739 + L("。"));
    }
    static _2500()
    {
        let _2501;
        _2501 = false;

        let _1902;
        _1902 = parent._585;
        let _1984;
        _1984 = _1011._1985(_1902);
        for (let _1981 = 0; _1981 < _1984; _1981++)
        {
            let _2502, _2503;
            [_2502, _2503] = _1011._2036(_1902, _1981);
            let _2504;
            if (_1981 == _1984 - 1)
                _2504 = true;
            else if (_1011._2505(_1902, _1981))
                _2504 = true;
            else 
                _2504 = false;
            let _2506=new Array();
            for (let _1983 = _2502; _1983 <= _2503; _1983++)
            {
                let _2056;
                _2056 = _1902[_1983];
                if (_2056._1137)
                    continue;
                _2506.push(_2056._1138._2434);
            }
            let _2507;
            _2507 = _2506.length;
            for (let _2508 = 1; _2508 < _2506.length; _2508++)
                if (!(_2506[_2508 - 1] <= _2506[_2508]))
                {
                    _2507 = _2508+1;
                    break;
                }
            if (_2507 == _2506.length)
                continue;
            if (!_2504)
            {
                _2501 = true;
                _2440._1980(_1981,L("这个自然段的势不是一直增加。"));
            }
            else
            {
                let _2509;
                _2509 = false;
                for (let _2508 = _2507; _2508 < _2506.length; _2508++)
                    if (!(_2506[_2508 - 1] >= _2506[_2508]))
                    {
                        _2509 = true;
                        break;
                    }
                if (_2509)
                {
                    _2501 = true;
                    if (_1981 == _1984 - 1)
                    {
                        if (_2507)
                            _2440._1980(_1981, L("最后一个自然段势开始减少后，就不要再增加了"));
                        else
                            _2440._1980(_1981, L("最后一个自然段的势可以一直减少，但是不要再增加了"));
                    }
                    else
                    {
                        if (_2507)
                            _2440._1980(_1981, L("高潮自然段势开始减少后，就不要再增加了"));
                        else
                            _2440._1980(_1981, L("高潮自然段的势可以一直减少，但是不要再增加了"));
                    }
                }
            }
        }
        if (!_2501)
            _2031();
    }
    static _2510()
    {
        let _1902;
        _1902 = parent._585;
        let _1739, _2511;
        _1739 = -1e00;
        for (let _620 = 0; _620 < _1902.length; _620++)
        {
            let _445;
            _445 = _1902[_620];
            if (_445._1137)
                continue;
            let _270;
            _270 = _445._1138;
            let _2433;
            _2433 = _270._2434;
            if (_2433 > _1739)
            {
                _2511 = _620;
                _1739 = _2433;
            }
        }
        if (_1011._1915(_1902, _1902[_2511]))
            _2031();
        else
            _2440._2117(L("势最大的自然段，不是高潮自然段，而是第") + (_1011._1966(_1902, _1902[_2511])+1)+ L("自然段"));
    }
}

