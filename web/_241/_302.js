class _2600
{
    static _2853;
    static _2854;
    static _2605 = null;
    static _2703;
    static _2601(_2605, _2853)
    {
        _2600._2853 = _2853;
        _2600._2854 = L(_2853);
        _2600._2605 = _2605;
        _2600._2703 = _2605._2577;
    }
    static _2839()
    {
        if (_2600._2605)
            return true;
        else
            return false;
    }
    static _2840()
    {
        _2600._2853 = null;
        _2600._2854 = null;
        _2600._2605 = null;
        _2600._2703 = null;
    }
    static _2581(_270)
    {
        return _2579._2581(_270, _2600._2703,_2600._2853);
    }
    static _2704(_270,_2705)
    {
        return _2579._2704(_270, _2600._2703, _2600._2853, _2705);
    }
    static _2610(_270)
    {
        return _2579._2610(_270, _2600._2853);
    }
    static _2709(_270, _2710)
    {
        return _2579._2709(_270, _2710, _2600._2853);
    }
    static _2607(_1902, _620)
    {
        return _2579._2607(_1902, _620, _2600._2703, _2600._2853);
    }
    static _2714(_1902, _620)
    {
        return _2579._2714(_1902, _620, _2600._2703, _2600._2853);
    }
    static _2855()
    {
        let _1902;
        _1902 = parent._585;

        let _824;
        _824 = "";
        _824 += "<span style='display: inline-block; position:relative; top: -25px; '>";
        for (let _620 = 0; _620 < _1902.length; _620++)
        {
            let _445;
            _445 = _1902[_620];
            if (_445._1137)
                continue;
            let _270;
            _270 = _445._1138;
            let _2856 = Array(3), _2857 = Array(3), _2858 = Array(3), _2859 = Array(3);
            for (let _2860 = 0; _2860 < _2547._2567.length; _2860++)
            {
                let _2853;
                _2853 = _2547._2567[_2860]._2568;
                let _2703;
                _2703 = _2579._2604(_270, _2853);
                let _2861, _2862, _2863, _2864;
                _2861 = _2862 = _2863 = _2864 = "";
                if (!_2703)
                {

                }
                else
                {
                    let _2865;
                    _2865 = _2547._2548(_2703);
                    let _2866;
                    _2866 = _2865._2606;
                    let _2867, _2868;
                    _2867 = _2600._2853;
                    _2868 = _2600._2605;
                    _2600._2601(_2865,_2853);
                    if (!_2866)
                    {
                        _2863 = L(_2703);
                        _2864 = "background: linear-gradient(to bottom, rgba(0 0 255 / 0.08) 0%, rgba(0 0 255 / 0.2) 49%, rgba(0 0 255 / 0.2) 51%, rgba(0 0 255 / 0.08) 100%);";
                    }
                    else
                    {
                        let _2869;
                        _2869 = _2600._2610(_270);
                        let _2607;
                        _2607 = _2600._2607(_1902, _620);
                        if (_2607)
                        {
                            _2863 = L(_2703);
                            if (!_2869)
                                _2864 = "background: linear-gradient(to bottom, rgba(255 0 0 / 0.0) 0%, rgba(255 0 0 / 0.0) 49%, rgba(255 0 0 / 0.19) 51%, rgba(0 0 255 / 0.2) 100%);";
                            else
                                _2864 = "background: linear-gradient(to bottom, rgba(0 0 255 / 0.0) 0%, rgba(0 0 255 / 0.0) 49%, rgba(255 0 0 / 0.08) 51%, rgba(0 0 255 / 0.2) 100%);";
                        }
                        else
                        {
                            _2861 = L(_2703);;
                            _2862 = "background-color: rgba(0 0 255 / 0.2);";
                            _2863 = L(_2703);
                            if (!_2869)
                                _2864 = "background: linear-gradient(to bottom, rgba(0 0 255 / 0.2) 0%, rgba(0 0 255 / 0.08) 49%, rgba(0 0 255 / 0.0) 51%, rgba(0 0 255 / 0.0) 100%);";
                            else
                                _2864 = "background: linear-gradient(to bottom, rgba(0 0 255 / 0.2) 0%, rgba(255 0 0 / 0.19) 49%, rgba(255 0 0 / 0.0) 51%, rgba(255 0 0 / 0.0) 100%);";
                        }
                    }
                    _2600._2601(_2868, _2867);
                    _2868 = null;
                    _2867 = null;
                }
                _2856[_2860] = _2861;
                _2857[_2860] = _2862;
                _2858[_2860] = _2863;
                _2859[_2860] = _2864;
            }
            let _2870;
            _2870 = _270._1139 ? 33 : 7;
            _824 += "<span title='" + _2856[0] + "'style='display: inline-block; width: 28px; height: " + _2870 + "px;" + _2857[0] + "' >&nbsp;</span>" + "<span style='display: inline-block; width: 2px; height: 1px;' >&nbsp;</span>";
            _824 += "<span title='" + _2856[1] + "'style='display: inline-block; width: 28px; height: " + _2870 + "px;" + _2857[1] + "' >&nbsp;</span>" + "<span style='display: inline-block; width: 2px; height: 1px;' >&nbsp;</span>";
            _824 += "<span title='" + _2856[2] + "'style='display: inline-block; width: 28px; height: " + _2870 + "px;" + _2857[2] + "' >&nbsp;</span>";
            _824 += "<br/>";
            _824 += "<span title='" + _2858[0] + "' style='display: inline-block; width: 28px; " + _2859[0] + "' >&nbsp</span>" + "<span style='display: inline-block; width: 2px; height: 2px;' >&nbsp;</span>";
            _824 += "<span title='" + _2858[1] + "' style='display: inline-block; width: 28px; " + _2859[1] + "' >&nbsp</span>" + "<span style='display: inline-block; width: 2px; height: 2px;' >&nbsp;</span>";
            _824 += "<span title='" + _2858[2] + "' style='display: inline-block; width: 28px; " + _2859[2] + "' >&nbsp</span>";
            _824 += "<br/>";
        }
        _824 += "</span>";
        return _824;
    }
    static _612()
    {
        
        _297.innerHTML = L("特色") + " -- " + L(this._2703);

        let _1902;
        _1902 = parent._585;

        let _2865;
        _2865 = _2600._2605;
        let _2866;
        _2866 = _2865._2606;

        let _824;
        _824 = "";
        _824 += "<div style='text-align:center;width:100%;'>\r\n";

        _824 += "   <div id='_2908' style='text-align: left; text-indent: 2em; display: inline-block; margin-bottom: 5px; margin-top: 10px;'>\r\n";
        _824 += "       " + L("谱曲时应该采用一到两个特色，特色可以出现在") + this._2854 +L("。");
        _824 += "       " + L("一首歌中，特色反复出现，但不一定是所有的句子，都要有这个特色。请选择需要") + this._2854 + L("特色的句子。");
        _824 += "   </div><br/>\r\n";

        let _2582;
        _2582 = _2865._2583();
        _824 += "   <div id='_2909' style='text-align: left; display: inline-block; margin-bottom: 5px; margin-top: 10px;'>\r\n";
        _824 += "       " + L("图例：") + "\r\n";
        if (_2582)
            _824 += "       " + "<br/>\r\n";
        if (!_2866)
        {
            if (_2582)
            {
                _824 += "   <span style='background: linear-gradient(to bottom, rgba(0 255 0 / 0.0) 0%, rgba(0 255 0 / 0.33) 49%, rgba(0 255 0 / 0.33) 51%, rgba(0 255 0 / 0.0) 100%);'>";
                _824 += "       " + L("没有应有特色的句子，但是根据节拍可以应用");
                _824 += "   </span><br/>\r\n";
            }
            _824 += "   <span style='background: linear-gradient(to bottom, rgba(0 0 255 / 0.0) 0%, rgba(0 0 255 / 0.33) 49%, rgba(0 0 255 / 0.33) 51%, rgba(0 0 255 / 0.0) 100%);'>";
            _824 += "       " + L("已经应用了特色的句子");
            _824 += "   </span><br/>\r\n";
            if (_2582)
            {
                _824 += "   <span style='background: linear-gradient(to bottom, rgba(255 255 0 / 0.0) 0%, rgba(255 255 0 / 0.33) 49%, rgba(255 255 0 / 0.33) 51%, rgba(255 255 0 / 0.0) 100%);'>";
                _824 += "       " + L("没有应用特色的句子，应用后将改变节拍");
                _824 += "   </span><br/>\r\n";
                _824 += "   <span style='background: linear-gradient(to bottom, rgba(100 0 255 / 0.0) 0%, rgba(100 0 255 / 0.33) 49%, rgba(100 0 255 / 0.33) 51%, rgba(100 0 255 / 0.0) 100%);'>";
                _824 += "       " + L("已经应用了特色的句子，自动谱曲后会改变节拍");
                _824 += "   </span><br/>\r\n";
            } 
        }
        else
        {
            if (_2582)
            {
                _824 += "<span style='display: inline-block;'>\r\n";
                _824 += "   <span style='background: linear-gradient(to bottom, rgba(0 255 0 / 0.0) 0%, rgba(0 255 0 / 0.0) 49%, rgba(0 255 0 / 0.1) 51%, rgba(0 255 0 / 0.2) 100%);'>";
                _824 += "       " + L("没有应有特色的句子对，但是根据节拍可以应用") + "1";
                _824 += "   </span><br/>\r\n";
                _824 += "   <span style='background: linear-gradient(to bottom, rgba(0 255 0 / 0.2) 0%, rgba(0 255 0 / 0.1) 49%, rgba(0 255 0 / 0.0) 51%, rgba(0 255 0 / 0.0) 100%);'>";
                _824 += "       " + L("没有应有特色的句子对，但是根据节拍可以应用") + "2";
                _824 += "   </span>\r\n";
                _824 += "</span><br/>\r\n";
            }

            _824 += "<span style='display: inline-block;'>\r\n";
            _824 += "   <span style='background: linear-gradient(to bottom, rgba(255 0 0 / 0.0) 0%, rgba(255 0 0 / 0.0) 49%, rgba(255 0 0 / 0.26) 51%, rgba(0 0 255 / 0.27) 100%);'>";
            _824 += "       " + L("已经应用了特色的句子对") + "1";
            _824 += "   </span><br/>\r\n";
            _824 += "   <span style='background: linear-gradient(to bottom, rgba(0 0 255 / 0.27) 0%, rgba(0 0 255 / 0.15) 49%, rgba(0 0 255 / 0.0) 51%, rgba(0 0 255 / 0.0) 100%);'>";
            _824 += "       " + L("已经应用了特色的句子对") + "2";
            _824 += "   </span>\r\n";
            _824 += "</span><br/>\r\n";

            
            
            
            
            
            
            
            

            if (_2582)
            {
                _824 += "<span style='display: inline-block;'>\r\n";
                _824 += "   <span style='background: linear-gradient(to bottom, rgba(255 255 0 / 0.0) 0%, rgba(255 255 0 / 0.0) 49%, rgba(255 255 0 / 0.1) 51%, rgba(255 255 0 / 0.2) 100%);'>";
                _824 += "       " + L("没有应用特色的句子对，应用后将改变节拍") + "1";
                _824 += "   </span><br/>\r\n";
                _824 += "   <span style='background: linear-gradient(to bottom, rgba(255 255 0 / 0.2) 0%, rgba(255 255 0 / 0.1) 49%, rgba(255 255 0 / 0.0) 51%, rgba(255 255 0 / 0.0) 100%);'>";
                _824 += "       " + L("没有应用特色的句子对，应用后将改变节拍") + "2";
                _824 += "   </span>\r\n";
                _824 += "</span>\r\n";

                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
                
            }
        }
        _824 += "   </div><br/>\r\n";

        _824 += "   <div id='_2906' style='text-align: left; display: inline-block; margin-bottom: 5px; margin-top: 10px;'>\r\n";
        _824 += "       <div style='text-indent: 2em;'>\r\n";
        _824 += "           " + L("当前选中的句子特色是：") + L(_2865._2577) + "&nbsp;&nbsp;\r\n";
        _824 += "           <img src='Note/" + this._2853 +"/"+ _2865._2577 + ".png'  style='width: 150px;' >\r\n";
        _824 += "       </div>\r\n";
        {
            _824 += "       <div style='text-indent: 2em;'>";
            if (_2582)
                _824 += "           " +L("可以应用到的节拍：") + _2582 + "<br />\r\n";
            else
                _824 += "           " +L("可以应用到任何种类的节拍。") + "<br />\r\n";
            _824 += "       </div>\r\n";
        }
        _824 += "   </div><br/><br/>\r\n";

        _824 += "<div id='_2910' style='text-align: center; font-size:20px;font-weight: lighter; text-align: left; white-space:nowrap;display: inline-block;'>\r\n";
        _824 += "<span style='text-align: right; display: inline-block; text-align: center; position: relative; top: 12px;'>\r\n";
        function _2871(_2872, _2873, _620, _2874 = false, _2875 = -1, _2876 = true, _2877=false)
        {
            let _2878, _2879;
            _2878 = _1011._2878(_1902, _1902[_620]);
            _2879 = _1011._2879(_1902, _1902[_620]);
            let _513, _1962, _1929, _1736, _2880;
            _513 = "";
            function _2881(_2882, _2883)
            {
                if (!_2874)
                {
                    _513 = "background: linear-gradient(to bottom, rgba(" + _2882 + ") 0%, rgba(" + _2883 + ") 50%, rgba(" + _2882 + ") 100%);";
                    _2880 = "";
                }
                else
                {
                    if (_2876)
                    {
                        if (_2878)
                        {
                            _2880 = "";
                            _513 = "";
                        }
                        else
                        {
                            _2880 = "";
                            _513 = "background: linear-gradient(to bottom, rgba(" + _2883 + ") 0%, rgba(" + _2882 + ") 100%);";
                        }
                    }
                    else
                    {
                        if (_2879)
                        {
                            _2880 = "";
                            _513 = "";
                        }
                        else
                        {
                            _2880 = "background: rgba(" + _2883 + ");";
                            _513 = "background: linear-gradient(to bottom, rgba(" + _2882 + ") 0%, rgba(" + _2883 + ") 100%);";
                        }
                    }
                }
            }
            let _2884;
            _2884 = false;
            if (_2874)
            {
                if (_2878 && _2876 == true)
                    _2884 = true;
                else if (_2879 && _2876 == false)
                    _2884 = true;
                else if (_2875 == -1)
                    _2884 = true;
            }
            if (_2884)
            {
                _513 = "";
                _1962 = "";
                _1929 = "auto";
                _1736 = "";
                _2880= "";
            }
            else
            {
                if (!_2872)
                {
                    if (_2873)
                    {
                        if (!_2874)
                        {
                            _2881("100 0 255 / 0.08", "100 0 255 / 0.2");
                        }
                        else
                        {
                            if (((!_2876) && (!_2877)) || (_2876 && _2877))
                                _2881("255 0 0 / 0.19", "100 0 255 / 0.2");
                            else
                                _2881("100 0 255 / 0.08", "100 0 255 / 0.2");
                        }
                        _1962 = ((!_2874) ? L("这句话应用") : L("这一对句子应用")) + this._2854 + L("了特色（会修改节拍方式），点击去掉应用") + ((!_2874) ? "" : L("按住Ctrl点击，句子对特色效果会对调。"));
                        _1929 = "alias";
                        _1736 = "_2600._2913(" + _620 + "," + _2875 + ");";
                    }
                    else
                    {
                        if (_2582)
                            _2881("255 255 0 / 0.03", "255 255 0 / 0.1");
                        _1962 = ((!_2874) ? L("这句话无法应用句子") : L("这一对句子无法应用")) + this._2854 + L("特色");
                        _1929 = "pointer";
                        _1736 = "_2600._2911(" + _620 + "," + _2875 + ");";
                    }
                }
                else
                {
                    if (_2873)
                    {
                        if (!_2874)
                        {
                            _2881("0 0 255 / 0.08", "0 0 255 / 0.2");
                        }
                        else
                        {
                            if (((!_2876) && (!_2877)) || (_2876 && _2877))
                                _2881("255 0 0 / 0.19", "0 0 255 / 0.2");
                            else
                                _2881("0 0 255 / 0.08", "0 0 255 / 0.2");
                        }
                        _1962 = ((!_2874) ? L("这句话应用了句子") : L("这一对句子应用了")) + this._2854 + L("特色，点击去掉应用") + ((!_2874) ? "" : L("按住Ctrl点击，句子对特色效果会对调。"));;
                        _1929 = "pointer";
                        _1736 = "_2600._2913(" + _620 + "," + _2875 + ");";
                    }
                    else
                    {
                        if (_2582)
                            _2881("0 255 0 / 0.03", "0 255 0 / 0.1");
                        _1962 = ((!_2874) ? L("这句话没有应用句子") : L("这一对句子没有应用")) + this._2854 + L("特色，点击应用");
                        _1929 = "pointer";
                        _1736 = "_2600._2911(" + _620 + "," + _2875 + ");";
                    }
                }
            }
            return [_513, _1962, _1929, _1736, _2880];
        }
        if (!_2866)
        {
            for (let _620 = 0; _620 < _1902.length; _620++)
            {
                let _445;
                _445 = _1902[_620];
                if (_445._1137)
                    continue;
                let _270;
                _270 = _445._1138;
                let _2133;
                _2133 = _1141._1654(_445);
                let _2885;
                _2885 = _2865._2628(_1902, _2133, _270, _620);
                let _513, _1962, _1929, _1736;
                [_513, _1962, _1929, _1736] = _2871.bind(this)(_2885 != -1, this._2581(_270), _620);
                let _2161;
                _2161 = _1141._2162(_2133);
                _824 += "<span id='_7634" + _620 + "' title='" + _1962 + "' style='display: inline-block;white-space: nowrap; cursor: " + _1929 + "; " + _513 + "' onclick='" + _1736 + "'>";
                for (let _2283 = 0; _2283 < _2161; _2283++)
                {
                    let _2743, _2685;
                    [_2743, _2685] = _1141._2282(_2133, _2283);
                    let _2744, _2745;
                    _2744 = "";
                    for (let _1656 = _2743; _1656 <= _2685; _1656++)
                    {
                        _2744 += "<span id='_7635" + _620 + "_" + _1656 + "'>";
                        let _2262;
                        _2262 = _2133[_1656];
                        let _358;
                        _358 = _2262._1657;
                        _2744 += _358._1640;
                        _2744 += _358._1688();
                        if (_1656 == _2685)
                        {
                            let _2746;
                            let _2747;
                            _2746 = _2748._2749(_2133, _1656, '_7752', eval(_1410("_2747")));
                            if ((!_2746) || _2747)
                            {
                                _2745 = " ";
                                if (_2747)
                                    _2744 += _2746;
                            }
                            else
                            {
                                _2745 = _2746;
                            }
                        }
                        _2744 += "</span>";
                    }

                    if (_2283 == _2885)
                        _824 += "<span style='background-color: rgba(255 64 0 / 0.2);'>";
                    let _270;
                    _270 = _2133[_2685]._2317;
                    _824 += _2552._2644(_2744, _270, false, _620, _2283) + _2745;
                    if (_2283 == _2885)
                        _824 += "</span>";
                    _824 += _2745;
                }
                _824 += "</span><br/>\r\n";
                _824 += _2552._2734(_1902, _620);
            }
        }
        else
        {
            for (let _620 = 0; _620 < _1902.length; _620++)
            {
                let _445;
                _445 = _1902[_620];
                if (_445._1137)
                    continue;
                let _270;
                _270 = _445._1138;
                let _2133;
                _2133 = _1141._1654(_445);

                
                let _2886 = false;
                let _2887 = -1;
                let _2888 = -1;
                let _2889 = -1;
                let _2890 = false;

                let _2891 = false;
                let _2892 = -1;
                let _2893 = -1;
                let _2894 = -1;
                let _2895 = false;
                _2886 = _2600._2714(_1902, _620);
                _2891 = _2600._2607(_1902, _620);
                if (!_445._1138._1139)
                {
                    _2887 = _1011._1903(_1902, _620);
                    if (_2887 != -1)
                    {
                        let _1934;
                        _1934 = _1902[_2887];
                        let _1925;
                        _1925 = _1934._1138;
                        let _2896;
                        _2896 = _1141._1654(_1934);
                        [_2888, _2889] = _2865._2628(_1902, _2896, _1925, _2887, _2133, _270, _620);
                    }
                }
                {
                    _2892 = _1011._1905(_1902, _620);
                    if (_2892 != -1)
                    {
                        let _1936;
                        _1936 = _1902[_2892];
                        let _1968;
                        _1968 = _1936._1138;
                        if (_1968._1139)
                        {
                            _2892 = -1;
                        }
                        else
                        {
                            let _2897;
                            _2897 = _1141._1654(_1936);
                            [_2893, _2894] = _2865._2628(_1902, _2133, _270, _620, _2897, _1968, _2892);
                        }
                    }
                }

                if (_2886 && _2887!=-1)
                    _2890 = _2600._2610(_1902[_2887]._1138);
                if (_2891 && _2892!=-1)
                    _2895 = _2600._2610(_445._1138);
                

                let _2898, _2899, _2900, _2901;
                let _2902, _2903, _2904, _2905, _2880;
                [_2898, _2899, _2900, _2901] = _2871.bind(this)(_2889 != -1, _2886, _620, true, _2887, true, _2890);
                [_2902, _2903, _2904, _2905, _2880] = _2871.bind(this)(_2893 != -1, _2891, _620, true, _2892, false, _2895);


                let _2161;
                _2161 = _1141._2162(_2133);
                _824 += "<div style='position: relative; display: inline-block;width: 100%;'>\r\n";
                _824 += "<span title='" + _2899 + "' style = 'position: absolute; display: inline-block; left: 0px; top: 0px; height: 9px; width: 100%; cursor: " + _2900 + "; " + _2898 + "' onclick='" + _2901 + "'>&nbsp</span>\r\n";
                _824 += "<span title='" + _2903 + "' style = 'position: absolute; display: inline-block; left: 0px; top: 17px; height: 9px; width: 100%; cursor: " + _2904 + "; " + _2902 + "' onclick='" + _2905 + "'>&nbsp</span>\r\n";
                _824 += "<span id='_7634" + _620 + "' style='position: relative; display: inline-block; white-space: nowrap; pointer-events: none;'>\r\n";
                for (let _2283 = 0; _2283 < _2161; _2283++)
                {
                    let _2743, _2685;
                    [_2743, _2685] = _1141._2282(_2133, _2283);
                    let _2744, _2745;
                    _2744 = "";
                    for (let _1656 = _2743; _1656 <= _2685; _1656++)
                    {
                        _2744 += "<span id='_7635" + _620 + "_" + _1656 + "'>";
                        let _2262;
                        _2262 = _2133[_1656];
                        let _358;
                        _358 = _2262._1657;
                        _2744 += _358._1640;
                        _2744 += _358._1688();
                        if (_1656 == _2685)
                        {
                            let _2746;
                            let _2747;
                            _2746 = _2748._2749(_2133, _1656, '_7752', eval(_1410("_2747")));
                            if ((!_2746) || _2747)
                            {
                                _2745 = " ";
                                if (_2747)
                                    _2744 += _2746;
                            }
                            else
                            {
                                _2745 = _2746;
                            }
                        }
                        _2744 += "</span>";
                    }

                    let _513;
                    if (_2283 == _2889 && _2283 == _2893)
                        _513 = "background-color: rgba(255 64 0 / 0.2);";
                    else if (_2283 != _2889 && _2283 == _2893)
                        _513 = "background: linear-gradient(to bottom, rgba(255 64 0 / 0.0) 0%, rgba(255 64 0 / 0.0) 49%, rgba(255 64 0 / 0.2) 51%, rgba(255 64 0 / 0.2) 100%);";
                    else if (_2283 == _2889 && _2283 != _2893)
                        _513 = "background: linear-gradient(to bottom, rgba(255 64 0 / 0.2) 0%, rgba(255 64 0 / 0.2) 49%, rgba(255 64 0 / 0.0) 51%, rgba(255 64 0 / 0.0) 100%);";
                    else
                        _513 = "";
                    _824 += "<span style=' pointer-events: none; position: relative;'>\r\n";
                    _824 += "<span style=' pointer-events: none; position: absolute; left: 0px; top: 0px; width:100%;  display: inline-block; transform: scaleY(1.2); transform-origin: left, center;" + _513 + "'>&nbsp;</span>\r\n";
                    let _270;
                    _270 = _2133[_2685]._2317;
                    _824 += _2552._2644(_2744, _270, false, _620, _2283,"pointer-events: none; position: relative; ") + _2745;
                    _824 += "</span>\r\n";
                    _824 += _2745;
                }
                _824 += "</span>\r\n";
                _824 += "</div>\r\n";

                _824 += _2552._2734(_1902, _620, "cursor: " + _2904 + "; " + _2880, "title='" + _2903 + "' onclick='" + _2905 + "'");
            }
        }
        _824 += "</span>\r\n";
        _824 += _2552._2738(_1902);
        _824 += "&nbsp;&nbsp;";
        _824 += _2600._2855();
        _824 += "&nbsp;&nbsp;";
        _824 += _1938._2050();
        _824 += "</div><br/><br/>\r\n";


        _824 += "   <span id='_2907' style='display: inline-block; text-align: left;'>\r\n";
        _824 += "       <div>" + L("句子特色的建议有：") + "</div>\r\n";
        _824 += "       <ul style=''>\r\n";
        _824 += "           <li>\r\n";
        _824 += "              " + L("为了保证句子特色的密度足够大，每个句子不能太长。大约每5个音节，要有一个特色，否则就会太单调。") + "\r\n";
        _824 += "              " + "<span style='cursor: pointer; color: blue; text-decoration: underline; white-space: nowrap;' onclick='_2600._2923();'>" + L("检测") + "</span>" + L("。") + "\r\n";
        _824 += "              " + L("长句子建议拆开，形成多行，一个句子的最后一行押韵就行。") + "\r\n";
        _824 += "           </li>\r\n";
        _824 += "       </ul>\r\n";
        _824 += "       <ul style=''>\r\n";
        _824 += "           <li>\r\n";
        _824 += "              " + L("每个自然段，建议应用了特色的句子，要有最少三分之一。") + "\r\n";
        _824 += "              " + "<span style='cursor: pointer; color: blue; text-decoration: underline; white-space: nowrap;' onclick='_2600._2928();'>" + L("检测") + "</span>" + L("。") + "\r\n";
        _824 += "           </li>\r\n";
        _824 += "       </ul>\r\n";
        _824 += "       <ul style=''>\r\n";
        _824 += "           <li>\r\n";
        _824 += "              " + L("一首歌在所有句子的特定位置，最多使用三种特色；保证旋律简单，能够普及传唱。") + "\r\n";
        _824 += "              " + "<span style='cursor: pointer; color: blue; text-decoration: underline; white-space: nowrap;' onclick='_2600._2932();'>" + L("检测") + "</span>" + L("。") + "\r\n";
        _824 += "           </li>\r\n";
        _824 += "       </ul>\r\n";
        _824 += "   </span><br/>\r\n";
        _824 += "</div>\r\n";
        _1906(_824);
        _1907(_2906.style.width = _2907, _2908, _2909, _2910);
        _2552._2079("_7634", "_7635", _1902, -6, -8);
    }
    static _2911(_620, _2875)
    {
        this._2912(_620, _2875,true);
    }
    static _2913(_620, _2875)
    {
        this._2912(_620, _2875, false);
    }
    static _2912(_620, _2875, _2914)
    {
        if (_2875 != -1)
        {
            if (!(_620 < _2875))
            {
                let _2799;
                _2799 = _620;
                _620 = _2875;
                _2875 = _2799;
            }
        }

        let _1902;
        _1902 = parent._585;
        let _445;
        _445 = _1902[_620];
        let _270;
        _270 = _445._1138;
        let _2915;
        let _2916;
        if (_2875 != -1)
        {
            _2915 = _1902[_2875];
            _2916 = _2915._1138;
        }

        if (_2875 != -1 && _2914 == false && (event.ctrlKey || event.shiftKey || event.altKey))
        {
            this._2709(_270, !this._2610(_270));
            this._2709(_2916, !this._2610(_2916));
            this._612();
            return;
        }


        
        
        let _2917;
        let _2918;
        if (_2914)
        {
            let _2919;
            _2919 = _2579._2604(_270, this._2853);
            if (_2919)
            {
                let _2920;
                _2920 = _2600._2605;
                let _2921;
                _2921 = _2547._2548(_2919);
                _2600._2601(_2921, this._2853);
                if (_2600._2714(_1902, _620))
                {
                    let _1933;
                    _1933 = _1011._1903(_1902, _620);
                    if (_1933 != -1)
                    {
                        let _1934;
                        _1934 = _1902[_1933];
                        _2917 = _1934._1138;
                        if (!this._2581(_2917))
                            console.assert(0);
                    }
                }
                _2600._2601(_2920, this._2853);
            }
            let _2922;
            _2922 = _2875 != -1 ? _2875 : _620;
            _2919 = _2579._2604(_1902[_2922]._1138, this._2853);
            if (_2919)
            {
                let _2920;
                _2920 = _2600._2605;
                let _2921;
                _2921 = _2547._2548(_2919);
                _2600._2601(_2921, this._2853);
                if (_2600._2607(_1902, _2922))
                {
                    let _1935;
                    _1935 = _1011._1905(_1902, _2922);
                    if (_1935 != -1)
                    {
                        let _1936;
                        _1936 = _1902[_1935];
                        _2918 = _1936._1138;
                        if (!this._2581(_2918))
                            console.assert(0);
                    }
                }
                _2600._2601(_2920, this._2853);
            }
        }

        
        
        if (_2917)
            this._2704(_2917, false);
        if (_2918)
            this._2704(_2918, false);
        if (_2875 != -1)
            this._2704(_2916, _2914);
        this._2704(_270, _2914);
        this._612();
    }

    
    static _261()
    {
        _2552._261()
    }
    static _1980(_1981, _1962)
    {
        let _1902;
        _1902 = parent._585;
        let _2034, _2035;
        [_2034, _2035] = _1011._2036(_1902, _1981);
        let _2765;
        _2765 = document.getElementById("_7630" + _2035);
        _2765.innerHTML = "<span style='font-weight:normal; font-size: small; vertial-align: top;'>"+F("↑ ")+_1962+"</span>";
        _1979();
    }
    static _2117(_1962)
    {
        let _1902;
        _1902 = parent._585;
        let _1984;
        _1984 = _1011._1985(_1902);
        if (_1984 <= 0)
            return;
        this._1980(_1984 - 1, _1962);
    }
    static _2923()
    {
        let _2030;
        _2030 = false;
        let _1902;
        _1902 = parent._585;
        for (let _620 = 0; _620 < _1902.length; _620++)
        {
            let _445;
            _445 = _1902[_620];
            if (_445._1137)
                continue;
            let _270;
            _270 = _445._1138;
            let _2924;
            _2924 = 0;
            if (_270._2546)
                _2924++;
            if (_270._2702)
                _2924++;
            if (_270._2550)
                _2924++;
            let _2133;
            _2133 = _1141._1654(_445);
            let _2053;
            _2053 = _2133.length;
            if (_2924 == 0)
            {
                let _2925 = (4+1);
                if (_2053 >= _2925)
                {
                    _2552._1976(_620, L("这个句子没有特色，但是音节数（") + _2053 + L("）大于等于") + _2925 + L("。建议增加特色，或者减少音节数。"));
                    _2030 = true;
                }
            }
            else
            {
                let _2926 = (5+1);
                let _2927;
                _2927 = _2053 / _2924;
                if (_2927 >= _2926)
                {
                    _2552._1976(_620, L("这个句子特色太少，他有") + _2924 + ("_7753") + _2053 + L("个音节；平均每个特色") + _2927.toFixed(1) + L("个音节。建议增加特色，使得每个特色的平均音节数小于") + _2926 + L("；或者减少音节数。"));
                    _2030 = true;
                }
            }
        }
        if (!_2030)
            _2031();
    }

    static _2928()
    {
        let _2030;
        _2030 = false;
        let _1902;
        _1902 = parent._585;
        let _1984;
        _1984 = _1011._1985(_1902);
        if (_1984 <= 0)
            return;
        for (let _1981 = 0; _1981 < _1984; _1981++)
        {
            let _2001, _2002;
            [_2001, _2002] = _1011._2036(_1902, _1981);
            let _2929, _2930;
            _2929 = _2930 = 0;
            for (let _620 = _2001; _620 <= _2002; _620++)
            {
                let _445;
                _445 = _1902[_620];
                if (_445._1137)
                    continue;
                _2929++;
                let _270;
                _270 = _445._1138;
                if (_270._2546 || _270._2702 || _270._2550)
                    _2930++;
            }
            if (_2929)
            {
                if (_2930 == 0)
                {
                    if (_2929 >= 3)
                    {
                        _2030 = true;
                        let _1962;
                        _1962 = L("宽松地，最少三句话就要应用一个特色的句子。现在是") + _2929 + L("个句子，没有一个应用特色的句子。");
                        _2600._1980(_1981, _1962);
                    }
                }
                else
                {
                    let _2931;
                    _2931 = _2929 / _2930;
                    if (_2931 > 3)
                    {
                        _2030 = true;
                        let _1962;
                        _1962 = L("宽松地，最少三句话就要应用一个特色的句子。现在是") + _2929 + L("个句子，") + _2930 + L("个应用特色的句子，平均每个特色") + _2931.toFixed(1) + L("个句子。");
                        _2600._1980(_1981, _1962);
                    }
                }
            }
        }
        if (!_2030)
            _2031();
    }

    static _2932()
    {
        let _904;
        _904 = "";
        let _1902;
        _1902 = parent._585;
        for (let _2860 = 0; _2860 < _2547._2567.length; _2860++)
        {
            let _2853;
            _2853 = _2547._2567[_2860]._2568;
            let _2933 = new Array();
            for (let _620 = 0; _620 < _1902.length; _620++)
            {
                let _445;
                _445 = _1902[_620];
                if (_445._1137)
                    continue;
                let _270;
                _270 = _445._1138;
                let _2934;
                _2934 = _2579._2604(_270, _2853);
                if (!_2933[_2934])
                    _2933[_2934] = true;
            }
            if (_2933.length > 3)
                _904 += L("在") + L(_2853) + L("，特色超过了三种，一共") + _2933.length + L("种，他们是：") + _2933.toString() + L("。建议减少句子特色的种类。");
        }
        if (_904)
            _2600._2117(_904);
        else
            _2031();
    }
}

