class _2547
{
    static _2567 =
    [
        {
            _2568: F("句子开头"),
            _2569:
                [
                    new _2570(),
                    new _2571()
                ]
        },
        {
            _2568: F("句子中间"),
            _2569:
                [
                    new _2572()
                    
                ]
        },
        {
            _2568: F("句子结尾"),
            _2569:
                [
                    new _2573(),
                    
                    new _2574(),
                    new _2575()
                    
                    
                    
                ]
        }
    ];
    static _612()
    {
        let _2576;
        _2576 = this._2567;
        let _1902;
        _1902 = parent._585;

        let _824;
        _824 = "";
        _824 += "<div style='text-align: left;'>";
        _824 += L("对一个歌曲的谱曲，最大特点就是整首歌反复出现一到两个特色。请在这里选中特色。") + "\r\n";
        _824 += "</div>\r\n";
        _824 += "<br/>\r\n";

        function _1290(_1564, _2568)
        {
            let _1232;
            _1232 = _1564._2577;
            let _2578;
            {
                _2579._2580 = _1564;
                for (let _620 = 0; _620 < _1902.length; _620++)
                {
                    let _445;
                    _445 = _1902[_620];
                    if (_445._1137)
                        continue;
                    let _270;
                    _270 = _445._1138;
                    if (_2579._2581(_270, _1232, _2568))
                    {
                        _2578 = true;
                        break;
                    }
                }
                _2579._2580 = null;
            }
            _824 += "<span style='display: inline-block; text-align: center; cursor: pointer; border: outset; border-width: 1px;' onclick='_2547._2597(\"" + _1232 +"\");'>\r\n";
            _824 += "<img src='Note/" + _2568 + "/" + _1232 + ".png'  style='width: 200px;' ><br/><br/>\r\n";
            let _2582;
            _2582 = _1564._2583();
            if (_2582)
                _824 += L("可以应用到的节拍：") + _2582 + "<br />\r\n";
            else
                _824 += L("可以应用到任何种类的节拍。") + "<br />\r\n";
            _824 += "<br />\r\n"; 
            _824 += L(_1232);
            _824 += "&nbsp;&nbsp;";
            if (_2578)
                _824 += "<img src='/_23.png'  style='width: 20px; height: 20px;' ><br/>\r\n";
            else
                _824 += "<img src='/_22.png'  style='width: 20px; height: 20px;' ><br/>\r\n";
            _824 += "</span>\r\n";
        }
        for (let _2584 = 0; _2584 < _2576.length; _2584++)
        {
            let _262;
            _262 = _2576[_2584];
            let _2568, _2569;
            _2568 = _262._2568;
            _2569 = _262._2569;
            _824 += "<div style='font-size: large; font-weight: bold;'>" + L(_2568) + "</div>\r\n";
            for (let _2585 = 0; _2585 < _2569.length; _2585++)
            {
                let _2586;
                _2586 = _2569[_2585];
                _1290(_2586, _2568);
            }
            _824 += "<br/><br/><br/>\r\n";
        }

        _1906(_824);
    }
    static _2587(_2588)
    {
        let _2576;
        _2576 = this._2567;
        for (let _2584 = 0; _2584 < _2576.length; _2584++)
        {
            let _262;
            _262 = _2576[_2584];
            let _2568, _2569;
            _2568 = _262._2568;
            _2569 = _262._2569;
            for (let _2585 = 0; _2585 < _2569.length; _2585++)
            {
                let _2586;
                _2586 = _2569[_2585];
                _2588(_2586, _2568);
            }
        }
    }
    static _2589()
    {
        let _985 = new Object();
        return JSON.stringify(_985,null,"\t");
    }
    static _2590(_2591)
    {
        
    }
    static _2548(_2592,_2593)
    {
        let _2594, _2595;
        function _2596(_2586, _2568)
        {
            if (_2586._2577 == _2592)
            {
                _2594 = _2586;
                _2595 = _2568;
            }
        }
        this._2587(_2596);
        if (_2595 && _2593)
            _2593(_2595);
        return _2594;
    }
    static _2597(_2592)
    {
        let _1564;
        let _2568;
        _1564 = this._2548(_2592, function (_2598) { _2568 = _2598; });
        _2599();
        _2600._2601(_1564,_2568);
        _2602(_292, _2600);
    }

    static _1626(_2055, _2056, _1983, _2057, _2058)
    {
        let _270;
        _270 = _2056._1138;
        let _2576;
        _2576 = this._2567;
        for (let _2584 = 0; _2584 < _2576.length; _2584++)
        {
            let _2603;
            _2603 = _2576[_2584]._2568;
            let _2592;
            _2592 = _2579._2604(_270, _2603);
            if (!_2592)
                continue;
            if (_2592 == F("句子开头两次上行") || _2592 == F("句子结尾两次下行"))
                continue;
            let _2597;
            _2597 = _2579._2581(_270, _2592, _2603);
            if (!_2597)
                return;
            let _2605;
            _2605 = _2547._2548(_2592);
            if (_2605._2606)
            {
                if (_2579._2607(_2055, _1983, _2592,_2603))
                    return;
                let _2608;
                _2608 = _1011._1903(_2055, _1983);
                let _2609;
                _2609 = _2057 - (_1983 - _2608);
                if (_2609 < 0 || _2609 >= _2058)
                    console.assert(0);
                if (_2579._2610(_2055[_2608]._1138,_2603)==false)
                    _2605._2549(_2055, _2055[_2608], _2608, _2609, _2056, _1983, _2057, _2058);
                else
                    _2605._2549(_2055, _2056, _1983, _2057, _2055[_2608], _2608, _2609, _2058);
            }
            else
            {
                _2605._2549(_2055, _2056, _1983, _2057, _2058);
            }
        }
    }

}

