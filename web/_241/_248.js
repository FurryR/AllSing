class _1938
{
    static _1939(_270)
    {
        return _1011._1940(_270, _1938._1941);
    }
    static _1942(_270)
    {
        return _1011._1943(_270, _1938._1941);
    }
    static _1944(_270, _1945)
    {
        return _1011._1946(_270, _1945, _1938._1941);
    }
    static _1947(_270, _1948)
    {
        return _1011._1949(_270, _1948, _1938._1941);
    }
    static _1950 = null;
    static _1951 = "";
    static _1952= F("低");
    static _1953= F("高");
    static _1954 = "rgba(10 100 10 / 0.2)";
    static _1955 = "rgba(0 255 0 / 0.1)";
    static _1941 = F("基础音高");
    static _1956 = L("基础音高");

    
    
    
    
    
    static _1957(_1902, _1102)
    {
        let _824;
        _824 = "";
        _824 += "<span style='display: inline-block;'>\r\n";
        for (let _620 = 0; _620 < _1902.length; _620++)
        {
            let _445;
            _445 = _1902[_620];
            if (_445._1137)
                continue;
            let _270;
            _270 = _445._1138;
            let _1958;
            _1958 = this._1939(_270);
            let _1959;
            _1959 = this._1942(_270);
            let _1960;
            _1960 = (_1959 != false);
            let _1914;
            _1914 = _1011._1915(_1902, _445);

            
            let _93;
            if (_1102 == "_7742")
                _93 = _1141._1142(_445);
            else if (_1102 == "_7743")
                _93 = "&nbsp;<span id='_7624" + _620 + "' style='color: rgb(128, 0, 0); font-size: small;'>&nbsp;</span>\r\n";
            else if (_1102 == "_7744")
                _93 = "<span style='display: inline-block; width: 30px; '>&nbsp;</span>";
            else if (_1102 == "_7745")
                _93 = "<span style='color: rgba(0 0 0 / 0.40 );' onclick='_2389(" + _1011._1961(_1902, _620) + ");'>" + F("🖊︎") + "</span>";
            let _513;
            let _1736;
            let _1962;
            let _1963;
            let _1929;
            _513 = _1736 = _1962 = _1963 = _1929 = "";
            if (_1102 == "_7743")
            {
            }
            else if(_1102 == "_7745")
            {
                _1929 = "cursor: pointer;";
                _1962 = L("回主界面编辑");
            }
            else if (!_1960)
            {
                if (_1102 == "_7742")
                    _1962 = L("不是") + this._1956 + L("对比的句子");
            }
            else if (_1959 == this._1952)
            {
                _513 = "background-color: " + this._1954 + ";";
                if (_1102 == "_7742")
                {
                    
                    _1736 = "onclick='_1938._2025(" + _620 + ");'";
                    _1962 = L("切换成") + this._1956 + L(this._1953) + L("的句子");
                    _1929 = "cursor: pointer;";
                }
                else
                {
                    _1929 = "cursor: default;";
                    _1962 = this._1956 + L(this._1952) + L("的句子");
                }
            }
            else
            {
                _513 = "background-color: " + this._1955 + ";";
                if (_1102 == "_7742")
                {
                    
                    _1736 = "onclick='_1938._2025(" + _620 + ");'";
                    _1962 = L("切换成") + this._1956 + L(this._1952) + L("的句子");
                    _1929 = "cursor: pointer;";
                }
                else
                {
                    _1929 = "cursor: default;";
                    _1962 = this._1956 + L(this._1953) + L("的句子");
                }
            }
            if (_1102 == "_7742" && _1914)
                _1963 = "font-weight: bold;";
            _824 += "<div title='" + _1962 + "' style='" + _1929 + _513 + _1963 + "' " + _1736 + ">" + _93 + "</div>\r\n";
            

            
            let _1964;
            _1964 = "";
            if (_1102 == "_7742")
            {
                let _1965;
                _1965 = _1011._1905(_1902, _620);
                if (_1965 == -1 || _1902[_1965]._1138._1139)
                    _1964 = "&nbsp;<span id='_7625" + _1011._1966(_1902, _445) + "' style='position: relative; top: -3px; color: rgb(128, 0, 0); font-size: small;'>&nbsp;</span>\r\n";
                else
                    _1964 = "&nbsp;";
            }
            else if (_1102 == "_7743")
            {
                _1964 = "&nbsp;";
            }
            else if (_1102 == "_7744")
            {
                _1964 = "<span style='display: inline-block; width: 30px;'>&nbsp;</span>";
            }
            else 
            {
                _1964 = "<span >&nbsp;</span>";
            }
            {
                let _1965;
                _1965 = _1011._1905(_1902, _620);
                if (_1965 != -1)
                {
                    let _1967;
                    _1967 = _1902[_1965];
                    let _1968;
                    _1968 = _1967._1138;
                    let _1969;
                    _1969 = this._1939(_1968);
                    let _1970;
                    _1970 = this._1942(_1968);
                    let _1971;
                    _1971 = (_1970 != false);

                    if (_1960 && _1971 && (!_1969))
                    {
                        let _1972;
                        if (_1968._1139)
                            _1972 = 33;
                        else
                            _1972 = 7;
                        let _1973, _1974;
                        _1973 = (_1959 == this._1952) ? this._1954 : this._1955;
                        _1974 = (_1970 == this._1952) ? this._1954 : this._1955;
                        let _1975, _1929, _1962, _513;
                        _1975 = _1929 = _1962 = _513 = "";
                        if (_1102 == "_7742")
                        {
                            _1975 = "onclick='_1938._2018(" + _620 + ");'";
                            _1929 = "cursor:vertical-text;";
                            _1962 = L("拆开句子对比");
                        }
                        if (_1102 != "_7743" && _1102 != "_7745")
                            _513 = "background: linear-gradient(to bottom, " + _1973 + ", " + _1974 + "); ";
                        if (_1102 == "_7744" || _1102 == "_7743" || _1102 == "_7745")
                            _1929 = "cursor:default;";
                        _824 += "<div title='" + _1962 + "' style='width: 100%; height: " + _1972 + "px; " + _1929 + _513 + "' " + _1975 + ">" + _1964 +"</div>\r\n";
                    }
                    else
                    {
                        let _1972;
                        if (_1968._1139)
                            _1972 = 33;
                        else
                            _1972 = 7;
                        let _1975, _1929, _1962;
                        _1975 = _1929 = _1962 = "";
                        if (_1102 == "_7742")
                        {
                            _1975 = "onclick = '_1938._2008(" + _620 + ");'";
                            _1929 = "cursor:copy;";
                            _1962 = L("合成句子对比（按住Ctrl不拆分现有句子对比）");
                        }
                        if (_1102 == "_7744" || _1102 == "_7743" || _1102 == "_7745")
                            _1929 = "cursor:default;";
                        _824 += "<div title='" + _1962 + "' style='width:100%;height:" + _1972 + "px;" + _1929 + "' " + _1975 + ">" + _1964 +"</div>\r\n";
                    }
                }
                else
                {
                    _824 += "<div style='height:33px;' >" + _1964 +"</div>\r\n";
                }
            }
            
        }
        _824 += "</span>";
        return _824;
    }

    static _1976(_620, _1962)
    {
        let _1977;
        _1977 = document.getElementById("_7624" + _620);
        _1978(_1977, _1962);
        _1979();
    }
    static _1980(_1981, _1962)
    {
        let _1982;
        _1982 = document.getElementById("_7625" + _1981);
        _1978(_1982, _1962);
        _1979();
    }
    static _261()
    {
        let _1902;
        _1902 = parent._585;
        for (let _1983 = 0; _1983 < _1902.length; _1983++)
        {
            let _445;
            _445 = _1902[_1983];
            if (_445._1137)
                continue;
            let _1977;
            _1977 = document.getElementById("_7624" + _1983);
            _1977.innerHTML = "&nbsp;";
            _1977.title = "";
        }
        let _1984;
        _1984 = _1011._1985(_1902);
        for (let _1981 = 0; _1981 < _1984; _1981++)
        {
            let _1982;
            _1982 = document.getElementById("_7625" + _1981);
            _1982.innerHTML = "&nbsp;";
            _1982.title = "";
        }
    }


    static _612()
    {
        let _1902;
        _1902 = parent._585;

        let _824;
        _824 = "";
        _824 += "<div style='text-align:center;width:100%;'>\r\n";
        _824 += "<div id='_1995' style='text-align: left; text-indent: 2em; display: inline-block;'>\r\n";
        _824 += "   <div>\r\n";
        if (this._1941 == F("音节数"))
        {
            _824 += "       " + L("先在主界面编辑句子的音节数，让两个相邻的句子形成音节数量的对比。再在这里标记出来形成对比的句子。") + "\r\n";
            _824 += "       " + L("机器根据标记的信息，进行自动谱曲。") + "\r\n";
            _824 += "       " + L("这里标记出来形成对比的句子，不会在谱曲的时候自动改变句子长度。") + "\r\n";
        }
        else
        {
            _824 += "       " + L("在这里，手工指定好") + this._1956 + L("后，机器会根据指定的信息，自动谱曲。") + "\r\n";
        }
        _824 += "   </div>\r\n";
        _824 += "   <div>\r\n";
        _824 += "       " + L("相邻的两个句子，一个");
        _824 += "       <span style='background-color: " + this._1954 + "'>" + this._1956 + L(this._1952) + "</span>";
        _824 += "       " + L("，另外一个");
        _824 += "       <span style='background-color: " + this._1955 + "'>" + this._1956 + L(this._1953) + "</span>";
        _824 += "       " + L("，产生对比；从而通过对比，增加音乐的美感。") + "\r\n";
        _824 += "   </div>\r\n";
        _824 += "   <div>\r\n";
        _824 += "       " + L("普通的自然段，正常显示；");
        _824 += "       <span style='font-weight: bold;'>" + L("高潮自然段加粗。") + "</span>";
        _824 += "   </div>\r\n";
        _824 += "</div><br/><br/><br/>\r\n";

        _824 += "<div id='_1996' style='white-space: nowrap; display: inline-block;'>\r\n";
        _824 += this._1957(_1902, "_7742");
        {
            let _1986 = new Object();
            _1938._1987(_1986,_1938);
            let _1988 = [_1989, _1990, _1991];
            for (let _1992 = 0; _1992 < _1988.length; _1992++)
            {
                let _1993 = _1988[_1992];
                if (_1993._1941 != _1986._1941)
                {
                    _1938._1987(_1938, _1993);
                    _824 += this._1957(_1902, "_7744");
                }
            }
            _1938._1987(_1938, _1986);
        }
        _824 += this._1957(_1902, "_7743");
        if (this._1941 == F("音节数"))
            _824 += this._1957(_1902, "_7745");
        _824 += "</div><br/><br/><br/>\r\n";

        _824 += "<span id='_1994' style='display: inline-block; text-align: left; '>\r\n";
        _824 += "<div style='text-align: left; display: inline-block;'>\r\n";
        _824 += "   "+L("句子") + this._1956 +L("对比的建议有：") + "\r\n";
        _824 += "</div>\r\n";
        _824 += "<ul style='margin-bottom: 0px; margin-top: 0px;'>\r\n";
        _824 += "    <li>\r\n";
        _824 += "       " + L("每个自然段里，最少有一个句子") + this._1956 + L("对比。") + "\r\n";
        _824 += "       <span style='cursor: pointer; color: blue; text-decoration: underline; ' onclick='_1938._2032();'>" + L("检测") + "</span>\r\n";
        _824 += "   </li>\r\n";
        _824 += "    <li>\r\n";
        _824 += "       " + L("一个句子对，音高音量大、音节数量多、上行的往往是同一个句子，音高音量小、音节数量少、下行的往往是同一个句子。") + "\r\n";
        _824 += "       <span style='cursor: pointer; color: blue; text-decoration: underline; ' onclick='_1938._2039();'>" + L("检测") + "</span>\r\n";
        _824 += "   </li>\r\n";
        _824 += "    <li>\r\n";
        _824 += "       " + this._1956 + " " + L(this._1953) + L("的句子，往往在句子对的前面。") + "\r\n";
        _824 += "       <span style='cursor: pointer; color: blue; text-decoration: underline; ' onclick='_1938._2043();'>" + L("检测") + "</span>\r\n";
        _824 += "   </li>\r\n";
        if (this._1950 && this._1951)
        {
            _824 += "    <li>" + this._1951 + "\r\n";
            _824 += "       <span style='cursor: pointer; color: blue; text-decoration: underline; ' onclick='_1938._2029();'>" + L("检测") + "</span>\r\n";
            _824 += "   </li>\r\n";
        }
        _824 += "</ul>\r\n";
        _824 += "</span><br/><br/><br/>\r\n"

        _824 += "</div>\r\n";
        _1906(_824);
        _1907(_1994, _1995, _1996);
      }

    static _1997(_1948)
    {
        if (_1948 == false)
            console.assert(false);

        if (_1948 == this._1952)
            return this._1953;
        else
            return this._1952;
    }
    static _1998(_1902, _445)
    {
        return _1011._1998(_1902, _445, this._1941);
    }
    static _1999(_2000)
    {
        let _1902;
        _1902 = parent._585;
        let _2001, _2002;
        [_2001, _2002] = _1938._1998(_1902, _1902[_2000]);
        let _2003;
        _2003 = _1902[_2001]._1138;
        let _2004;
        _2004 = this._1942(_2003);
        let _2005;
        for (_2005 = _2001 + 1; _2005 <= _2002; _2005++)
        {
            let _445;
            _445 = _1902[_2005];
            if (_445._1137)
                continue;
            if (this._1942(_445._1138) != _2004)
                return false;
        }
        return true;
    }
    static _2006(_2000)
    {
        let _1902;
        _1902 = parent._585;
        let _2001, _2002;
        [_2001, _2002] = _1938._1998(_1902, _1902[_2000]);
        let _2003;
        _2003 = _1902[_2001]._1138;
        let _2004;
        _2004 = this._1942(_2003);
        let _2005;
        for (_2005 = _2001 + 1; _2005 <= _2002; _2005++)
        {
            let _445;
            _445 = _1902[_2005];
            if (_445._1137)
                continue;
            if (this._1942(_445._1138) != _2004)
                break;
        }
        if (_2005 > _2002)
            return false;

        
        let _2007;
        _2007 = this._1942(_1902[_2005]._1138);
        for (_2005++; _2005 <= _2002; _2005++)
        {
            let _445;
            _445 = _1902[_2005];
            if (_445._1137)
                continue;
            if (this._1942(_445._1138) != _2007)
                return false;
        }
        return true;
    }
    static _2008(_2009)
    {
        if (event.ctrlKey || event.shiftKey)
        {
            this._2010(_2009);
            return;
        }
        let _1902;
        _1902 = parent._585;
        let _2011;
        _2011 = _1011._1905(_1902, _2009);
        if (_2011 == -1)
            return;
        let _2012;
        _2012 = _1902[_2009]._1138;
        let _2013;
        _2013 = _1902[_2011]._1138;

        this._1944(_2012,true);
        this._1947(_2012, this._1953);
        this._1944(_2013,false);
        this._1947(_2013, this._1952);

        let _1933;
        _1933 = _1011._1903(_1902, _2009);
        if (_1933 != -1)
        {
            let _1925;
            _1925 = _1902[_1933]._1138;
            if (this._1942(_1925) != false)
            {
                let _2014;
                _2014 = _1011._1903(_1902, _1933);
                if (_2014 == -1)
                {
                    
                    
                    
                    this._1944(_1925,false);
                    this._1947(_1925,false);
                }
                else
                {
                    let _2015;
                    _2015 = _1902[_2014]._1138;
                    if (this._1942(_2015) == false)
                    {
                        
                        
                        
                        
                        this._1944(_1925,false);
                        this._1947(_1925,false);
                    }
                    else
                    {
                        if (this._1939(_1925))
                        {
                            
                            
                            
                            
                            
                            this._1944(_1925,false);
                            this._1947(_1925,false);
                        }
                        
                        
                            
                            
                            
                            
                            
                        
                    }
                }
            }
        }

        let _1935;
        _1935 = _1011._1905(_1902, _2011);
        if (_1935 != -1)
        {
            let _1968;
            _1968 = _1902[_1935]._1138;
            if (this._1942(_1968) != false)
            {
                let _2016;
                _2016 = _1011._1905(_1902, _1935);
                if (_2016 == -1)
                {
                    
                    
                    
                    this._1944(_1968,false);
                    this._1947(_1968,false);
                }
                else
                {
                    let _2017;
                    _2017 = _1902[_2016]._1138;
                    if (this._1942(_2017) == false)
                    {
                        
                        
                        
                        
                        this._1944(_1968,false);
                        this._1947(_1968,false);
                    }
                    else
                    {
                        
                        
                        
                        
                        this._1944(_1968,true);
                        if (this._1999(_1935))
                            this._1947(_1968,this._1997(this._1942(_1968)));
                    }
                }
            }
        }

        _1938._612();
    }
    static _2018(_2009)
    {
        let _1902;
        _1902 = parent._585;
        let _2011;
        _2011 = _1011._1905(_1902, _2009);
        if (_2011 == -1)
            return;
        let _2012;
        _2012 = _1902[_2009]._1138;
        let _2013;
        _2013 = _1902[_2011]._1138;

        
        
        
        if (this._1942(_2013) != false)
        {
            let _1935, _2016;
            _1935 = _1011._1905(_1902, _2011);
            if (_1935 == -1)
            {
                
                
                this._1944(_2013,false);
                this._1947(_2013,false);
            }
            else
            {
                let _1968;
                _1968 = _1902[_1935]._1138;
                if (this._1942(_1968) == false)
                {
                    
                    
                    
                    this._1944(_2013,false);
                    this._1947(_2013,false);
                }
                else if (this._1939(_1968))
                {
                    
                    
                    
                    this._1944(_2013,false);
                    this._1947(_2013,false);
                }
                else
                {
                    
                    
                    
                    this._1944(_2013,true);
                    if (this._1999(_2011))
                        this._1947(_2013,this._1997(this._1942(_2013)));
                }
            }
        }

        if (this._1942(_2012) != false)
        {
            let _1933, _2014;
            _1933 = _1011._1903(_1902, _2009);
            if (_1933 == -1)
            {
                
                
                this._1944(_2012, false);
                this._1947(_2012, false);
            }
            else if (this._1939(_2012))
            {
                
                
                this._1944(_2012, false);
                this._1947(_2012, false);
            }
            else
            {
                
                
                
                if (this._1999(_2009))
                    this._1947(_2012, this._1997(this._1942(_2012)));
            }
        }


        _1938._612();
    }
    static _2010(_2009)
    {
        let _1902;
        _1902 = parent._585;
        let _2011;
        _2011 = _1011._1905(_1902, _2009);
        if (_2011 == -1)
            return;
        let _2012;
        _2012 = _1902[_2009]._1138;
        let _2013;
        _2013 = _1902[_2011]._1138;
        let _2019;
        _2019 = (this._1942(_2012) != false);
        let _2020;
        _2020 = (this._1942(_2013) != false);


        if (_2019 && _2020)
        {
            
            
            
            
            if (!this._1939(_2013))
                console.assert(0);
            let _2021, _2022;
            [_2021, _2022] = _1938._1998(_1902, _1902[_2009]);
            let _2023;
            _2023 = this._1942(_2013);
            for (let _2024 = _2021; _2024 <= _2022; _2024++)
            {
                let _445;
                _445 = _1902[_2024];
                if (_445._1137)
                    continue;
                this._1947(_445._1138,_2023);
            }
            this._1944(_2013,false);
        }
        else if (_2019)
        {
            
            
            
            this._1944(_2013,false);
            this._1947(_2013,this._1942(_2012));
        }
        else if (_2020)
        {
            
            
            
            this._1944(_2012,true);
            this._1944(_2013,false);
            this._1947(_2012,this._1942(_2013));
        }
        else
        {
            
            
            this._1944(_2012,true);
            this._1947(_2012, this._1953);
            this._1944(_2013,false);
            this._1947(_2013, this._1952);
        }
        _1938._612();
    }
    static _2025(_620)
    {
        let _1902;
        _1902 = parent._585;

        let _270;
        _270 = _1902[_620]._1138;
        this._1947(_270,this._1997(this._1942(_270)));
        
        

        
        
        

        
        
        
        
        if (!this._2006(_620))
        {
            let _2001, _2002;
            [_2001, _2002] = _1938._1998(_1902, _1902[_620]);
            for (let _2026 = _2001; _2026 <= _2002; _2026++)
            {
                let _445;
                _445 = _1902[_2026];
                if (_445._1137)
                    continue;
                if (_2026 == _620)
                    continue;
                let _270;
                _270 = _1902[_2026]._1138;
                this._1947(_270,this._1997(this._1942(_270)));
            }
        }
        _1938._612();
    }
    static _2027(_2028)
    {
        _1938._1941 = _2028;
        _1938._1941 = L(_2028);
    }
    static _2029()
    {
        if (!this._1950)
            return;
        let _1902;
        _1902 = parent._585;
        let _2030;
        _2030 = false;
        for (let _620 = 0; _620 < _1902.length; _620++)
        {
            let _445;
            _445 = _1902[_620];
            if (_445._1137)
                continue;
            let _270;
            _270 = _445._1138;
            let _1958;
            _1958 = this._1939(_270);
            let _1959;
            _1959 = this._1942(_270);
            let _1960;
            _1960 = (_1959 != false);
            if (_1960)
            {
                let _2001, _2002;
                [_2001, _2002] = _1938._1998(_1902, _1902[_620]);
                if (_2002 == _620)
                {
                    let _1962;
                    _1962 = this._1950(_2001, _2002)
                    if (_1962)
                    {
                        _1938._1976(_620, _1962);
                        _2030 = true;
                    }
                }
            }
        }
        if (!_2030)
            _2031();
    }
    static _2032()
    {
        let _1902;
        _1902 = parent._585;

        
        let _2033;
        _2033 = _1011._1985(_1902);
        let _2030;
        _2030 = false;
        for (let _1981 = 0; _1981 < _2033; _1981++)
        {
            let _2034, _2035;
            [_2034, _2035] = _1011._2036(_1902, _1981);
            let _2037;
            _2037 = 0;
            let _2038;
            _2038 = 0;
            for (let _620 = _2034; _620 <= _2035; _620++)
            {
                let _445;
                _445 = _1902[_620];
                if (_445._1137)
                    continue;
                _2037++;
                let _270;
                _270 = _445._1138;
                if (_620 == _2034)
                {
                    if (this._1942(_270) != false)
                        _2038++;
                }
                else
                {
                    if (this._1939(_270))
                        _2038++;
                }
            }
            if (_2037 >= 3)
            {
                if (_2038 < 1)
                {
                    this._1980(_1981, L("每个自然段最少要有") + 1 + L("个") + this._1956 + L("句子对比，现在只有") + _2038 + L("个。"));
                    _2030 = true;
                }
            }
        }
        if (!_2030)
            _2031();
    }


    static _2039()
    {
        let _1902;
        _1902 = parent._585;
        let _2030;
        _2030 = false;
        for (let _620 = 0; _620 < _1902.length; _620++)
        {
            let _445;
            _445 = _1902[_620];
            if (_445._1137)
                continue;
            let _270;
            _270 = _445._1138;
            if (!(_270._2040 == false && _270._2041 == false && _270._2042 == false))
                if (!(_270._2040 == F("大") && _270._2041 == F("上行") && _270._2042 == F("长")))
                    if (!(_270._2040 == F("小") && _270._2041 == F("下行") && _270._2042 == F("短")))
                    {
                        _2030 = true;
                        let _1962;
                        _1962 = "";
                        _1962 += L("一个句子对，音高音量大、音节数量多、上行的往往是同一个句子，音高音量小、音节数量少、下行的往往是同一个句子。");
                        _1962 += L("这句话不是，建议修改。");
                        _1938._1976(_620, _1962);
                    }
        }
        if (!_2030)
            _2031();
    }

    static _2043()
    {
        let _1902;
        _1902 = parent._585;
        let _2030;
        _2030 = false;
        for (let _620 = 0; _620 < _1902.length; _620++)
        {
            let _445;
            _445 = _1902[_620];
            if (_445._1137)
                continue;
            let _270;
            _270 = _445._1138;
            if (this._1939(_270))
            {
                if (this._1942(_270) != this._1953)
                {
                    let _2044 = _620;
                    for (let _2045 = _620+1; _2045 < _1902.length; _2045++)
                    {
                        let _2046;
                        _2046 = _1902[_2045];
                        if (_2046._1137)
                            continue;
                        let _2047;
                        _2047 = _2046._1138;
                        _2044 = _2045;
                        if (this._1939(_2047) || (this._1942(_2047) == false))
                        {
                            _2044 = _2045-1;
                            break;
                        }
                    }
                    let _1962;
                    _1962 = this._1956 + " " + L(this._1953) + L("的句子，往往在句子对的前面。这里不是，建议修改。");
                    this._1976(_2044, _1962);
                    _2030 = true;
                }
            }
        }
        if (!_2030)
            _2031();
    }


    static _1987(_2048, _2049)
    {
        _2048._1950 = _2049._1950;
        _2048._1951 = _2049._1951;
        _2048._1953 = _2049._1953;
        _2048._1952 = _2049._1952;
        _2048._1955 = _2049._1955;
        _2048._1954 = _2049._1954;
        _2048._1941 = _2049._1941;
        _2048._1956 = L(_2048._1941);
    }
    static _2050()
    {
        let _1902;
        _1902 = parent._585;
        let _824;
        _824 = "";
        let _1986 = new Object();
        _1938._1987(_1986, _1938);
        let _1988 = [_1989, _1990, _1991];
        for (let _1992 = 0; _1992 < _1988.length; _1992++)
        {
            let _1993 = _1988[_1992];
            _1938._1987(_1938, _1993);
            _824 += this._1957(_1902, "_7744");
        }
        _1938._1987(_1938, _1986);
        return _824;
    }
}
class _1989
{
    static _261()
    {
        _1938._261();
    }
    static _1950 = null;
    static _1951 = "";
    static _1952 = F("小");
    static _1953 = F("大");
    static _1954 = "rgba(0 50 100 / 0.25)";
    static _1955 = "rgba(0 200 255 / 0.25)";
    static _1941 = F("音高音量");
    static _612()
    {
        _1938._1987(_1938,this);
        _1938._612();
    }
}


class _1990
{
    static _261()
    {
        _1938._261();
    }
    static _1950 = null;
    static _1951 = "";
    static _1952 = F("下行");
    static _1953 = F("上行");
    static _1954 = "rgba(0 130 37 / 0.18)";
    static _1955 = "rgba(200 0 100 / 0.1)";
    static _1941 = F("上下行");
    static _612()
    {
        _1938._1987(_1938, this);
        _1938._612();
    }
}



class _1991
{
    static _261()
    {
        _1938._261();
    }
    static _1950(_2001, _2002)
    {
        let _1902;
        _1902 = parent._585;
        let _2051, _2052;
        _2051 = 0;
        _2052 = 1000000;
        for (let _620 = _2001; _620 <= _2002; _620++)
        {
            let _445;
            _445 = _1902[_620];
            if (_445._1137)
                continue;
            let _2053;
            _2053 = _1141._1654(_445).length;
            let _270;
            _270 = _445._1138;
            if (_270._2042 == F("短"))
            {
                if (_2053 > _2051)
                    _2051 = _2053;
            }
            else
            {
                if (_2053 < _2052)
                    _2052 = _2053;
            }
        }
        if (!(_2052 * 0.5 > _2051))
            return L("短句子") + _2051 + L("个音节（最长）；长句子") + _2052 + L("个音节（最短）。") + L("不能形成句子的音节数量对比。");
        return null;
    }
    static _1951 = "_7746";
    static _1952 = F("短");
    static _1953 = F("长");
    static _1954 = "rgba(100 100 0 / 0.2)";
    static _1955 = "rgba(200 200 0 / 0.2)";
    static _1941 = F("音节数");
    static _612()
    {
        _1938._1987(_1938, this);
        _1938._612();
    }
}

