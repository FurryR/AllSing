class _2552
{
    static _2733(_1902, _620)
    {
        let _1935;
        _1935 = _1011._1905(_1902, _620);
        if (_1935 == -1)
            return true;
        if (_1902[_1935]._1138._1139)
            return true;
        return false; 
    }
    static _2734(_1902, _620, _2735 = "", _2736 = "")
    {
        let _2737;
        _2737 = _2552._2733(_1902, _620);
        return "<div id='_7630" + _620 + "' style='white-space: nowrap; height: " + (_2737 ? 33 : 7) + "px; width: 100%; text-align: left; overflow: hidden;" + _2735 + "'  " + _2736 +">&nbsp;</div>";
    }
    static _2738(_1902)
    {
        let _824;
        _824 = "";
        _824 += "<span style='text-align: right; display: inline-block;'>\r\n";
        for (let _620 = 0; _620 < _1902.length; _620++)
        {
            let _445;
            _445 = _1902[_620];
            if (_445._1137)
                continue;
            let _2133;
            _2133 = _1141._1654(_445);
            let _2161;
            _2161 = _1141._2162(_2133);

            _824 += "<div style='white-space: nowrap; text-align: left;'>";
            _824 += "&nbsp";
            _824 += "<span id='_7631" + _620 + "'  style='font-size: initial; font-weight: initial;'>";
            _824 += "&nbsp;";
            _824 += "</span>\r\n";
            _824 += "</div>\r\n";
            let _2737;
            _2737 = _2552._2733(_1902, _620);
            _824 += "<div style='white-space: nowrap; height: " + (_2737 ? 33 : 7) + "px; width: 100%; text-align: left;' >";
            if (_2737)
                _824 += "<div id='_7632" + _1011._1966(_1902, _445) + "' style='font-size: initial; font-weight: initial; text-align: left;'>&nbsp;</div>\r\n";
            else
                _824 += "&nbsp;";
            _824 += "</div>\r\n";
        }
        _824 += "</span>\r\n";
        return _824;
    }
    
    static _2644(_2739, _1877, _2740, _620, _2283, _2735 = "", _2736 = "")
    {
        

        let _824;
        _824 = "";
        if (typeof _620 == "undefined" || typeof _2283 == "undefined")
            _824 += "<span style='white-space: nowrap;" + _2735 + "' " + _2736 +">\r\n";
        else
            _824 += "<span id='_7633" + _620 + "_" + _2283 + "' style='white-space: nowrap; " + _2735 + "' " + _2736 +">\r\n";
        _824 += "    <span style='position: relative; display: inline-block;'>\r\n";
        let _1962, _1929, _1736, _513, _2741;
        if (!_2740)
        {
            _1962 = "";
            _1929 = "inherit";
            _1736 = "";
        }
        else
        {
            if (_1877._2660)
            {
                _1962 = L("音高先高后低，点击去掉");
                _1929 = "alias";
                _1736 = "_2552._2770(" + _620 + "," + _2283 + ")";
            }
            else
            {
                _1962 = L("点击增加属性：音高先高后低");
                _1929 = "copy";
                _1736 = "_2552._2771(" + _620 + "," + _2283 + ")";
            }
        }
        if (_1877._2660)
        {
            _513 = "background: linear-gradient(to right, rgba(0 0 255 / 0.3), rgba(100 100 255 / 0.2));";
            _2741 = "";
        }
        else
        {
            _513 = "background-color: transparent;";
            _2741 = "box-sizing: border-box; border-width: 1px; border-style: solid; border-color: rgba(100 100 255 / 0.5);";
        }
        _824 += "        <span title='" + _1962 + "' style='position: absolute; left: 0px; top: 0px; " + _513 + _2741 + " display: inline-block; width: 100%; height: 10px; cursor: " + _1929 + ";' onclick='" + _1736 + "' >&nbsp;</span>\r\n";




        if (_2740)
        {
            if (_1877._2617)
            {
                _1962 = L("音量先高后低，点击去掉");
                _1929 = "alias";
                _1736 = "_2552._2772(" + _620 + "," + _2283 + ")";
            }
            else
            {
                _1962 = L("点击增加属性：音量先高后低");
                _1929 = "copy";
                _1736 = "_2552._2773(" + _620 + "," + _2283 + ")";
            }
        }
        if (_1877._2617)
        {
            _513 = "background: linear-gradient(to right, rgba(0 255 0 / 0.8), rgba(0 255 0 / 0));";
            _2741 = "";
        }
        else
        {
            _513 = "background-color: transparent;";
            _2741 = "box-sizing: border-box; border-width: 1px; border-style: solid; border-color: rgba(100 255 0 / 0.72);";
        }
        _824 += "        <span title='" + _1962 + "' style='position: absolute; left: 0px; top: 10px; " + _513 + _2741 + " display: inline-block; width: 100%; height: 10px; cursor: " + _1929 +"; ' onclick='" + _1736 +"'>&nbsp;</span>\r\n";





        if (_1877._2617)
        {
            if (_2740)
            {
                if (_1877._2661)
                {
                    _1962 = L("第一个音节，送气清擦音或者爆破音重读；点击去掉");
                    _1929 = "alias";
                    _1736 = "_2552._2774(" + _620 + "," + _2283 + ")";
                }
                else
                {
                    _1962 = L("点击增加属性：第一个音节，送气清擦音或者爆破音重读");
                    _1929 = "copy";
                    _1736 = "_2552._2775(" + _620 + "," + _2283 + ")";
                }
            }
            if (_1877._2661)
            {
                _513 = "background-color: rgb(0 230 255);";
                _2741 = "box-sizing: border-box; border-width: 1px; border-style: solid; border-color: rgb(0 180 200);";
            }
            else
            {
                _513 = "background-color: white;";
                _2741 = "box-sizing: border-box; border-width: 1px; border-style: solid; border-color: rgb(0 255 0);";
            }
            _824 += "        <span title='__hanzhi_xv_uqub__hanzhi_xv_aodb__hanzhi_xv_qpdb__hanzhi_xv_dofc__hanzhi_xv_alxb__hanzhi_xv_gpsd__hanzhi_xv_xncc__hanzhi_xv_eyob__hanzhi_xv_hrpb__hanzhi_xv_mfmb__hanzhi_xv_dofc__hanzhi_xv_udlb__hanzhi_xv_nmwb__hanzhi_xv_serb__hanzhi_xv_ontb__hanzhi_xv_dofc__hanzhi_xv_pfdc__hanzhi_xv_habc' style='position: absolute; left: 0px; top: 10px; " + _513 + _2741 + " display: inline-block; width: 10px; height: 10px;  cursor: " + _1929 + "; ' onclick='" + _1736 + "'> &nbsp;</span>\r\n";
        }




        _824 += "        <span style='position: relative; pointer-events: none;'>" + _2739 +"</span>\r\n";
        _824 += "    </span>";

        if (_2740)
        {
            if (_1877._2619)
            {
                _1962 = L("最后一个音节时值长；点击切换到，最后一个音节结束后停顿");
                _1929 = "alias";
                _1736 = "_2552._2776(" + _620 + "," + _2283 + ")";
            }
            else if (_1877._2620)
            {
                _1962 = L("最后一个音节结束后停顿；点击去掉");
                _1929 = "alias";
                _1736 = "_2552._2777(" + _620 + "," + _2283 + ")";
            }
            else
            {
                _1962 = L("点击增加属性：最后一个音节时值长");
                _1929 = "copy";
                _1736 = "_2552._2778(" + _620 + "," + _2283 + ")";
            }
        }
        if (_1877._2619)
        {
            _513 = "background-color: rgba(128 128 0 / 0.5);";
            _2741 = "";
        }
        else if (_1877._2620)
        {
            _513 = "background-color: rgba(255 128 0 / 0.5);";
            _2741 = "";
        }
        else
        {
            _513 = "background-color: transparent;";
            _2741 = "box-sizing: border-box; border-width: 1px; border-style: solid; border-color: rgba(128 128 0 / 0.5);";
        }       
        _824 += "<span title='" + _1962 +"' style='" + _513 + _2741 +" display: inline-block; width: 10px; height: 10px;  cursor: "+ _1929 +";'  onclick='" + _1736 + "'></span>\r\n";

        _824 += "</span>\r\n";
        return _824;
    }
    static _612()
    {
        let _1902;
        _1902 = parent._585;

        let _824;
        _824 = "";
        _824 += "<div style='text-align:center; width:100%;'>\r\n";
        _824 += "   <span id='_2751' style='display: inline-block; text-align: left; '>\r\n";
        _824 += "       <div style='text-align: left; display: inline-block;text-indent: 2em; '>\r\n";
        _824 += "           " + L("在这里，手动编辑节拍的实现方式，机器会根据这些信息，自动谱曲。") + "\r\n";
        _824 += "       </div>\r\n";
        _824 += "       <div style='text-align: left; display: inline-block;text-indent: 2em; '>\r\n";
        _824 += "           " + L("根据作者对流行歌曲的分析，节拍再也不是传统的2/4拍、3/4拍的概念，而是大体和单词对应。") + "\r\n";
        _824 += "           " + L("单词的第一个音节重，其余的轻。") + "\r\n";
        _824 += "           " + L("也有单个音节的单词，合成一个接拍的。也有一个单词拆成两个节拍的（不提倡）。") + "\r\n";
        _824 += "           " + L("一般来说，一个节拍有两个音节，也有三个音节或者一个音节的时候。") + "\r\n";
        _824 += "           " + L("这里是人声的节拍，和背景音乐的beat，并不一致。") + "\r\n";
        _824 += "       </div>\r\n";

        _824 += "       <div style='text-align: left; display: inline-block;'>\r\n";
        _824 += "           "+L("节拍实现的方式有：") + "\r\n";
        _824 += "       </div>\r\n";

        _824 += "       <ul style=''>\r\n";
        let _2742 = new _2643();
        _2742._2319 = true;

        _2742._2660 = true;
        _824 += "            <li><span style='font-size:20px;font-weight: lighter;'>" + this._2644(L("咚呛"), _2742) + "</span>&nbsp;&nbsp;" + L("前面的音节音高高") + "</li>\r\n";

        _2742._2660 = false;
        _2742._2617 = true;
        _824 += "           <li><span style='font-size:20px;font-weight: lighter;'>" + this._2644(L("咚呛"), _2742) + "</span>&nbsp;&nbsp;" + L("前面的音节音量大") + "</li>\r\n";

        _2742._2661 = true;
        _824 += "           <li><span style='font-size:20px;font-weight: lighter;'>" + this._2644(L("咚呛"), _2742) + "</span>&nbsp;&nbsp;" + L("第一个音节是爆破音较重或者送气清擦音较重") + "</li>\r\n";

        _2742._2617 = false;
        _2742._2661 = false;
        _2742._2619 = true;
        _824 += "           <li><span style='font-size:20px;font-weight: lighter;'>" + this._2644(L("咚呛"), _2742) + "</span>&nbsp;&nbsp;" + L("最后一个音节时值长") + "</li>\r\n";

        _2742._2619 = false;
        _2742._2620 = true;
        _824 += "           <li><span style='font-size:20px;font-weight: lighter;'>" + this._2644(L("咚呛"), _2742) + "</span>&nbsp;&nbsp;" + L("最后一个音节结束后停顿") + "</li>\r\n";

        _824 += "       </ul>\r\n";
        _824 += "   </span><br/><br/>\r\n"

        _824 += "<div id='_2752' style='text-align: center; font-size:20px;font-weight: lighter; text-align: left; white-space: nowrap; display: inline-block;'>\r\n";
        _824 += "<span style='text-align: right; display: inline-block; text-align: center; position: relative; top: 12px;'>\r\n";
        for (let _620 = 0; _620 < _1902.length; _620++)
        {
            let _445;
            _445 = _1902[_620];
            if (_445._1137)
                continue;
            let _2133;
            _2133 = _1141._1654(_445);
            let _2161;
            _2161 = _1141._2162(_2133);
            _824 += "<span id='_7634" + _620 +"' style='display: inline-block; white-space: nowrap;'>";
            for (let _2283 = 0; _2283 < _2161; _2283++)
            {
                let _2743, _2685;
                [_2743, _2685] = _1141._2282(_2133, _2283);
                let _2744, _2745;
                _2744 = "";
                for (let _1656 = _2743; _1656 <= _2685; _1656++)
                {
                    _2744 += "<span id='_7635" + _620 + "_" + _1656 +"'>";
                    let _2262;
                    _2262 = _2133[_1656];
                    let _358;
                    _358 = _2262._1657;
                    _2744 += _358._1640;
                    _2744 += _358._1688();
                    if (_1656 == _2685)
                    {
                        let _2746;
                        let _2747;
                        _2746 = _2748._2749(_2133, _1656, '_7752', eval(_1410("_2747")));
                        if ((!_2746) || _2747)
                        {
                            _2745 = " ";
                            if (_2747)
                                _2744 += _2746;
                        }
                        else
                        {
                            _2745 = _2746;
                        }
                    }
                    _2744 += "</span>";
                }

                let _270;
                _270 = _2133[_2685]._2317;
                _824 += this._2644(_2744, _270, true, _620, _2283);
            }
            _824 += "</span><br/>\r\n";
            _824 += _2552._2734(_1902, _620);
        }
        _824 += "</span>\r\n";
        _824 += _2552._2738(_1902);
        _824 += _1938._2050();
        _824 += "</div><br/><br/>\r\n";

        _824 += "   <span id='_2750' style='display: inline-block; text-align: left; '>\r\n";
        _824 += "       <div style='text-align: left; display: inline-block;'>\r\n";
        _824 += "          "+L("节拍实现的建议有：") + "\r\n";
        _824 += "       </div>\r\n";
        _824 += "       <ul style='margin-bottom: 0px; margin-top: 0px;'>\r\n";
        _824 += "           <li>";
        _824 += "               " + L("一句话内相邻的三个节拍实现方式不相似。") + "\r\n";
        _824 += "               <span style='cursor: pointer; color: blue; text-decoration: underline; white-space: nowrap;' onclick='_2552._2785();'>" + L("检测") + "</span>";
        _824 += "           </li>\r\n";
        _824 += "           <li>\r\n";
        _824 += "               " + L("不同的句子，节拍实现方式要有规律的循环。") + "\r\n";
        _824 += "           </li>\r\n";
        _824 += "       </ul>\r\n";
        _824 += "   </span><br/><br/><br/>\r\n"

        _824 += "</div>\r\n";

        _1906(_824);
        _1907(_2750, _2751, _2752);
        _2552._2079("_7634", "_7635", _1902, -6, -8);
    }

    static _2753(_620, _2754, _2755, _1962)
    {
        let _2756;
        _2756 = document.getElementById("_7634" + _620);
        let _2757;
        _2757 = _2756.getBoundingClientRect();
        let _2758;
        _2758 = _2756.parentElement;
        let _2759;
        _2759 = _2758.getBoundingClientRect();
        let _2760;
        _2760 = document.getElementById("_7633" + _620 + "_" + _2754);
        let _2761;
        _2761 = _2760.getBoundingClientRect();
        let _2762;
        _2762 = document.getElementById("_7633" + _620 + "_" + _2755);
        let _2763;
        _2763 = _2762.getBoundingClientRect();
        let _751, _752;
        _751 = _2761.left - _2759.left;
        _752 = _2763.right - _2759.left;
        let _2764;
        _2764 = _752 - _751;
        let _2765;
        _2765 = document.getElementById("_7630" + _620);
        _2765.innerHTML = "<span title='" + _1962 + "' style='display: inline-block; position: relative; left: " + _751 + "px; width: " + _2764 + "px; height: 7px; background-image: url(_260.png);'></span>";
        _1979();
    }
    static _1976(_620, _1962)
    {
        let _2756;
        _2756 = document.getElementById("_7631" + _620);
        if (_1962)
        {
            _2756.innerHTML = F("← ")+_1962;
            _2756.title = L("错误");
            _1979();
        }
        else
        {
            _2756.title = "";
            _2756.innerHTML = "&nbsp;";
        }
    }
    static _1980(_1981, _1962)
    {
        let _2116;
        _2116 = document.getElementById("_7632" + _1981);
        _2116.innerHTML = "&nbsp;&nbsp;"+_1962;
        if (_2116.innerText)
        {
            _2116.title = L("错误");
            _1979();
        }
        else
        {
            _2116.title = "";
            _2116.innerHTML = "&nbsp;";
        }

    }
    static _261()
    {
        let _1902;
        _1902 = parent._585;
        for (let _620 = 0; _620 < _1902.length; _620++)
        {
            let _445;
            _445 = _1902[_620];
            if (_445._1137)
                continue;

            let _2766;
            _2766 = document.getElementById("_7631" + _620);
            _2766.title = "";
            _2766.innerHTML = "&nbsp;";

            let _2765;
            _2765 = document.getElementById("_7630" + _620);
            _2765.innerHTML = "&nbsp;";
        }
        let _1984;
        _1984 = _1011._1985(_1902);
        for (let _1981 = 0; _1981 < _1984; _1981++)
        {
            let _2116;
            _2116 = document.getElementById("_7632" + _1981);
            _2116.title = "";
            _2116.innerHTML = "&nbsp;";
        }
    }

    static _2767(_620, _2283)
    {
        let _1902;
        _1902 = parent._585;
        let _445;
        _445 = _1902[_620];
        let _2133;
        _2133 = _1141._1654(_445);
        let _2409, _2410;
        [_2409, _2410] = _1141._2282(_2133, _2283);
        return _2133[_2410]._2317;
    }
    static _2768(_620, _2283, _2742)
    {
        let _1902;
        _1902 = parent._585;
        let _445;
        _445 = _1902[_620];
        let _2133;
        _2133 = _1141._1654(_445);
        let _2409, _2410;
        [_2409, _2410] = _1141._2282(_2133, _2283);
        let _2769;
        _2769 = _2133[_2410]._2317;
        _2769._2314(_2742);
        _1141._1659(_445, _2133);
        _2552._612();
    }
    static _2770(_620, _2283)
    {
        let _270;
        _270 = this._2767(_620, _2283);
        _270._2660 = false;
        this._2768(_620, _2283, _270);
    }
    static _2771(_620, _2283)
    {
        let _270;
        _270 = this._2767(_620, _2283);
        _270._2660 = true;
        this._2768(_620, _2283, _270);
    }
    static _2772(_620, _2283)
    {
        let _270;
        _270 = this._2767(_620, _2283);
        _270._2617 = false;
        this._2768(_620, _2283, _270);
    }
    static _2773(_620, _2283)
    {
        let _270;
        _270 = this._2767(_620, _2283);
        _270._2617 = true;
        this._2768(_620, _2283, _270);
    }
    static _2774(_620, _2283)
    {
        let _270;
        _270 = this._2767(_620, _2283);
        _270._2661 = false;
        this._2768(_620, _2283, _270);
    }
    static _2775(_620, _2283)
    {
        let _270;
        _270 = this._2767(_620, _2283);
        _270._2661 = true;
        this._2768(_620, _2283, _270);
    }
    static _2776(_620, _2283)
    {
        let _270;
        _270 = this._2767(_620, _2283);
        _270._2619 = false;
        _270._2620 = true;
        this._2768(_620, _2283, _270);
    }
    static _2777(_620, _2283)
    {
        let _270;
        _270 = this._2767(_620, _2283);
        _270._2619 = false;
        _270._2620 = false;
        this._2768(_620, _2283, _270);
    }
    static _2778(_620, _2283)
    {
        let _270;
        _270 = this._2767(_620, _2283);
        _270._2619 = true;
        _270._2620 = false;
        this._2768(_620, _2283, _270);
    }

    static _2079(_2779, _2780, _1902, _2122 = 0, _2123 = 0)
    {
        for (let _620 = 0; _620 < _1902.length; _620++)
        {
            let _445;
            _445 = _1902[_620];
            if (_445._1137)
                continue;
            let _270;
            _270 = _445._1138;
            let _2091;
            _2091 = _270._2102();
            let _2133;
            _2133 = _1141._1654(_445);
            let _2134;
            let _2135;
            [_2134, _2135] = _2136._2137(_2133, _2091)
            let _2781;
            _2781 = document.getElementById(_2779 + _620);
            let _2782;
            _2782 = _2781.getBoundingClientRect();
            let _2783;
            _2783 = document.getElementById(_2780 + _620 + "_" + _2134);
            let _2784;
            _2784 = _2783.getBoundingClientRect();
            _2074._2080(_2781, (_2784.left + _2784.width * _2135 - _2782.left) / (_2782.width + _2123), _2122, _2123);
        }
    }

    static _2785()
    {
        let _2030;
        _2030 = false;
        let _1902;
        _1902 = parent._585;
        for (let _620 = 0; _620 < _1902.length; _620++)
        {
            let _445;
            _445 = _1902[_620];
            if (_445._1137)
                continue;
            let _2133;
            _2133 = _1141._1654(_445);
            let _2161;
            _2161 = _1141._2162(_2133);
            function _2786(_2670, _2671)
            {
                if (_2670 == -1 || _2671 == -1)
                    return false;
                let _2787;
                _2787 = _1141._2648(_2133, _2670);
                let _2788;
                _2788 = _1141._2648(_2133, _2671);
                if (_2787._2660 != _2788._2660)
                    return false;
                if (_2787._2617 != _2788._2617)
                    return false;
                if ((_2787._2619 || _2787._2620) != (_2788._2619 || _2788._2620))
                    return false;
                return true;
            }
            let _2789;
            _2789 = -1;
            let _2790;
            function _2791()
            {
                let _2792;
                _2792 = _2790 - 1;
                let _2793;
                _2793 = _2792 - _2789 + 1;
                let _2794;
                
                
                
                
                
                
                {
                    if (_2793 >= 3)
                        _2794 = true;
                }
                if (_2794)
                {
                    _2552._2753(_620, _2789, _2792, L("这") + _2793 + L("个节拍拥有相同的实现方式，建议修改。"));
                    _2030 = true;
                }
            }
            for (_2790 = 0; _2790 < _2161; _2790++)
            {
                if (!_2786(_2790 , _2789))
                {
                    if (_2789 != -1)
                        _2791();
                    _2789 = _2790;
                }
            }
            if (_2789 != _2161 - 1)
                _2791();
        }
        if (!_2030)
            _2031();
    }



    static _2680(_2055, _2056, _1983, _2057, _2058, _2283)
    {
        let _2409, _2410;
        [_2409, _2410] = _2189._2284(_2056, _2283);

        let _2053;
        _2053 = _2410 - _2409 + 1;

        let _2795, _2796;
        _2795 = _2056._2154(_2409);
        _2796 = _2056._2154(_2410);

        if (_2053 == 1)
        {
            if (!_2795._2187)
            {
                _2795._2187 = true;
                let _1607;
                _1607 = _2795._2064() * 2;
                if (_1607 > 1)
                    _1607 = 1;
                _2795._2065(_1607);
            }
            let _2188;
            _2188 = new _2178();
            _2795._2185 = _2188;
            _2188.start = 0;
            _2188.stop = 1;
            _2188._2069 = _2188.stop - 1. / 8;
            _2188._2070 = 1;
            _2188._2164 = false;
        }
        else
        {
            let _2797, _2798;
            _2797 = _2795._2266();
            _2798 = _2796._2266();
            if (_2798 < _2797)
            {
                let _2799;
                _2799 = _2798;
                _2798 = _2797;
                _2797 = _2799;
            }
            let _2439;
            _2439 = _2798 - _2797;
            let _2438;
            _2438 = 2;
            if (_2439 < _2438)
            {
                _2797 -= (_2438 - _2439) / 2;
                _2798 += (_2438 - _2439) / 2;
            }
            for (let _1656 = _2409; _1656 <= _2410; _1656++)
            {
                let _333;
                _333 = _2056._2154(_1656);
                let _2188;
                _2188 = _581._761(_2798, _2797, _2409, _2410, _1656);
                _333._2193(_2188);
            }
        }
    }
    static _2618(_2055, _2056, _1983, _2057, _2058, _2283)
    {
        let _2409, _2410;
        [_2409, _2410] = _2189._2284(_2056, _2283);

        let _2053;
        _2053 = _2410 - _2409 + 1;

        let _2795, _2796;
        _2795 = _2056._2154(_2409);
        _2796 = _2056._2154(_2410);

        if (_2053 == 1 && (!_2795._2187))
        {
            _2795._2187 = true;
            let _1607;
            _1607 = _2795._2064() * 2;
            if (_1607 > 1)
                _1607 = 1;
            _2795._2065(_1607);
        }

        let _984;
        _984 = new _2163();
        _2795._2184 = _984;
        _984.start = 0;
        _984.stop = _2053 / 2.0;
        _984._2069 = _984.start + 1. / 8;
        _984._2070 = 1;
        _984._2164 = true;

        _984._2171 = true;
        _984._2172 = _984.stop;
        _984._2174 = _2053;
        _984._2173 = _984._2174 - 1. / 8;
        _984._2175 = 1;
        _984._2177 = false;        
    }
    static _2800(_2055, _2056, _1983, _2057, _2058, _2283)
    {
        
    }
    static _2801(_2055, _2056, _1983, _2057, _2058, _2283)
    {
        let _2409, _2410;
        [_2409, _2410] = _2189._2284(_2056, _2283);

        let _2053;
        _2053 = _2410 - _2409 + 1;

        let _2795, _2796;
        _2795 = _2056._2154(_2409);
        _2796 = _2056._2154(_2410);

        let _2802;
        _2802 = _2796._2064();
        if (!_2796._2187)
        {
            _2796._2187 = true;
            _2796._2065(_2802 * 2);
        }
        else
        {
            _2802 /= 2; 
        }
        _2796._2421 = _2802;
        if (_2796._2064() >= 1)
        {
            let _414;
            _414 = new _2179();
            _2796._2186 = _414;
            _414.start = 1. / 16;
            _414.stop = _414.start + 5. / 16;
            _414._2069 = (_414.start + _414.stop) / 2;
            _414._2070 = 0.50;
            _414._2180 = 0.8 / 8;
            _414._2181 = 1.7;
        }
        if (_2796._2064() >= 1)
            _2796._2066(L("钢琴最后两个音符"));

    }
    static _2698(_2055, _2056, _1983, _2057, _2058, _1656)
    {
        let _333;
        _333 = _2056._2154(_1656);
        {
            let _2802;
            _2802 = _333._2064();
            if (!_333._2187)
            {
                _333._2187 = true;
                _333._2202(_2802);
            }
            else
            {
                _333._2418 = _2802 / 2;
            }
        }
        if (_333._2064() >= 1)
        {
            let _414;
            _414 = new _2179();
            _333._2186 = _414;
            _414.stop = 0.5;
            _414.start = _414.stop - 4. / 16;
            _414._2069 = (_414.start + _414.stop) / 2;
            _414._2070 = 0.23;
            _414._2180 = 0.8 / 8;
            _414._2181 = 1.7;
        }
        if (_333._2064() >= 1)
            _333._2066(L("钢琴最后两个音符"));
    }
    static _2621(_2055, _2056, _1983, _2057, _2058, _2283)
    {
        let _2409, _2410;
        [_2409, _2410] = _2189._2284(_2056, _2283);

        let _2053;
        _2053 = _2410 - _2409 + 1;

        let _2795, _2796;
        _2795 = _2056._2154(_2409);
        _2796 = _2056._2154(_2410);

        _2552._2698(_2055, _2056, _1983, _2057, _2058, _2410);
    }
    static _1626(_2055, _2056, _1983, _2057, _2058)
    {
        let _2161;
        _2161 = _2189._2161(_2056);
        for (let _2283 = 0; _2283 < _2161; _2283++)
        {
            let _270;
            _270 = _2056._2286(_2283);
            if (_270._2660)
                _2552._2680(_2055, _2056, _1983, _2057, _2058, _2283);
            if (_270._2617)
                _2552._2618(_2055, _2056, _1983, _2057, _2058, _2283);
            if (_270._2661)
                _2552._2800(_2055, _2056, _1983, _2057, _2058, _2283);
            if (_270._2619)
                _2552._2801(_2055, _2056, _1983, _2057, _2058, _2283);
            if (_270._2620)
                _2552._2621(_2055, _2056, _1983, _2057, _2058, _2283);
        }
    }
}


