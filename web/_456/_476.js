class _1892
{
    static _7183 = 50;
    _1891 = L("未命名");
    _7274 = "blue";
    _7159 = F("厚度");

    static _7275 = "";
    _7147 = 160;
    _6939 = false;

    static _7276 = "";
    static _7277 = false;
    _7278 = _1892._7279;
    _7280 = false;

    static _7281 = "";
    _7282 = false;
    _7283 = 1;
    _7284 = 1;

    static _7285 = 0;
    _1794 = 1;

    static _7286 = null;
    _1795 = 0;

    

    static _7279 = F('{"最小值y": -1, "最大值y": 1, "最小值x": 0, "最大值x": 8000, "只能为正": false, "控制点数组":[]}');
    static _7287 = [L("变响"), L("不变"), L("变小")];
                                   
                                   
    static _7288 = ["32", "8","","", "2", "","","","1","","","","","","","", "0"];
    static _7289 = L("滤波");
    static _7290 = L("不同的频率（倍频），有不同的音量。")+
        '<span style="color:red;">' + L("警告：")+'</span>\r\n'+
        '<span style="color:saddlebrown;font-size:small;">' + L("窄频段大幅度滤波，可能改变咬字。") + '</span>\r\n' +
        '<span style="color: saddlebrown; font-size: small;">' + L("创作者知道歌词，可能听不出咬字的微小错误。" )+ '</span>\r\n' +
        '<span style="color: saddlebrown; font-size: small;">' + L("但是听众可能就听不出咬字了。") + '</span>\r\n';

    
    static _1893(_456)
    {
        let _3150 = new _1209();
        _3150._1235();
        _3150.String(F("签名"), F("大市唱音色1.0"));
        _3150.String(F("类型"),_456._7159);
        _3150.String(F("名称"),parent._1875()._622(_456._1891));
        _3150.String(F("颜色"),_456._7274);
        _3150._1244(F("身高"),_456._7147);
        _3150._1241(F("身高自动"), _456._6939);
        _3150._1247(F("滤波"), _456._7278);
        _3150._1241(F("滤波跟随频率"), _456._7280);
        _3150._1241(F("保留低倍频"),_456._7282);
        _3150._1244(F("第一倍频振幅"), _456._7283);
        _3150._1244(F("第二倍频振幅"), _456._7284);
        _3150._1244(F("共振峰宽度"), _456._1794);
        _3150._1244(F("高阶共振峰频谱位置"), _456._1795);
        _3150._1247(F("音色"), _456._1893());
        return _3150._1260();
    }
    
    static _7151(_893)
    {    
        if (parent._3151)
        {
            let _6271;
            _6271 = _893;

            let _456;
            let _7160 = new _804();
            _7160._807(_6271, "read_from_file");
            let _7291;
            if (_7291 = _7160._813(F("签名")))
            {
                if (_7291._792() != F("大市唱音色1.0"))
                    return null;
            }
            if (_7291 = _7160._813(F("类型")))
            {
                let _3289;
                _3289 = _7291._792();
                switch (_3289)
                {
                    case F("攫取"):
                        _456 = new _7292();
                        break;
                    case F("厚度"):
                        _456 = new _7154();
                        break;
                    case F("纯计算"):
                        _456 = new _7293();
                        break;
                }
            }
            if (_7291 = _7160._813(F("名称")))
            {
                _456._1891 = _7291._792();
                _456._1891 = parent._1875()._624(_456._1891);
            }
            if (_7291 = _7160._813(F("颜色")))
                _456._7274 = _7291._792();
            if (_7291 = _7160._813(F("身高")))
                _456._7147 = _7291._791();
            if (_7291 = _7160._813(F("身高自动")))
                _456._6939 = _7291._788();
            if (_7291 = _7160._813(F("滤波")))
                _456._7278 = _7291._792();
            if (_7291 = _7160._813(F("滤波跟随频率")))
                _456._7280 = _7291._788();
            if (_7291 = _7160._813(F("保留低倍频")))
                _456._7282 = _7291._788();
            if (_7291 = _7160._813(F("第一倍频振幅")))
                _456._7283 = _7291._791();
            if (_7291 = _7160._813(F("第二倍频振幅")))
                _456._7284 = _7291._791();
            if (_7291 = _7160._813(F("共振峰宽度")))
                _456._1794 = _7291._791();
            if (_7291 = _7160._813(F("高阶共振峰频谱位置")))
                _456._1795 = _7291._791();
            if (_7291 = _7160._813(F("音色")))
                _456._7151(_7291);
            return _456;
        }
        else
        {
            let _1580 = new _1261();
            _1580._1264(_893);
            let _456;
            let _623;
            if ((_623 = _1580.String(F("签名"))) !== undefined)
            {
                if (_623 != F("大市唱音色1.0"))
                    return null;
            }
            if ((_623 = _1580.String(F("类型"))) !== undefined)
            {
                switch (_623)
                {
                    case F("攫取"):
                        _456 = new _7292();
                        break;
                    case F("厚度"):
                        _456 = new _7154();
                        break;
                    case F("纯计算"):
                        _456 = new _7293();
                        break;
                }
            }
            if ((_623 = _1580.String(F("名称"))) !== undefined)
            {
                _456._1891 = _623;
                _456._1891 = parent._1875()._624(_456._1891);
            }
            if ((_623 = _1580.String(F("颜色"))) !== undefined)
                _456._7274 = _623;
            if ((_623 = _1580._1244(F("身高"))) !== undefined)
                _456._7147 = _623;
            if ((_623 = _1580._1241(F("身高自动"))) !== undefined)
                _456._6939 = _623;
            if ((_623 = _1580._1247(F("滤波"))) !== undefined)
                _456._7278 = _623;
            if ((_623 = _1580._1241(F("滤波跟随频率"))) !== undefined)
                _456._7280 = _623;
            if ((_623 = _1580._1241(F("保留低倍频"))) !== undefined)
                _456._7282 = _623;
            if ((_623 = _1580._1244(F("第一倍频振幅"))) !== undefined)
                _456._7283 = _623;
            if ((_623 = _1580._1244(F("第二倍频振幅"))) !== undefined)
                _456._7284 = _623;
            if ((_623 = _1580._1244(F("共振峰宽度"))) !== undefined)
                _456._1794 = _623;
            if ((_623 = _1580._1244(F("高阶共振峰频谱位置"))) !== undefined)
                _456._1795 = _623;
            if ((_623 = _1580._1247(F("音色"))) !== undefined)
                _456._7151(_623);
            return _456;
        }
    }
}
class _7155 extends _1892
{
    _7161 = F("全频段厚度同一");
    _7162 = 0;
    _7163 = _7155._7294; 
    static _7294 = F('{"最小值y": -1, "最大值y": 1, "只能为正": false, "控制点数组":[]}');
    static _7295 = [L("变厚"), L("不变"), L("变薄")];
    static _7296 = L("厚度");
    static _7297 = L("厚度大的嗓音听起来厚重，厚度小的嗓音听起来明亮清脆。不同的频率（倍频），有不同的厚度。");
}

