function _7505(_754, _7506)
{
    _7461[_754]._1891 = _7506;
}
function _7507(_754)
{
    let _456 = _7461[_754];
    switch (_456._7159)
    {
        case "攫取":
            _7508();
            setTimeout(function () { _498.contentWindow._7001(_456) }, 200);
            break;
    }
}
function _7509(_754)
{
    function _822(_784)
    {
        let _456 = _7461[_754];
        let _588;
        _588 = _1892._1893(_456);
        for (let _635 = 0; _635 < 2; _635++)
        {
            if (_635 == 0)
                _784._636();
            else
                _784._637();
            _784._638("_456");
            _784._638(_588);
        }
    }
    parent._6237("clipboard", _822);
}
function _7510()
{
    function _822(_784)
    {
        if (_784._792() != "_456")
            return;
        let _588;
        _588 = _784._792();
        let _7511;
        _7511 = _1892._7151(_588);
        if (_7511)
        {
            _7461.push(_7511);
            _7462();
        }
    }
    parent._6240("clipboard", _822);
}
function _7512(_754)
{
    _7461.splice(_754, 1);
    _7462();
}
function _7513(_754)
{

}
function _7514(_754)
{
    let _456 = _7461[_754];
    let _588;
    _588 = _1892._1893(_456);
    _1689(_456._1891 + ".dsc.timbre", _588);
}



function _7515()
{
    let _7511;
    _7511 = new _7292();
    _7461.push(_7511);
    function _7516()
    {
        if (_7511._7314.length == 0 && _7511._7299.length == 0)
            _7461.pop();
        _7517 = null;
    }
    _7517 = _7516;
    _7507(_7461.length - 1);
}
function _7518()
{
    let _7511;
    _7511 = new _7293();
    _7461.push(_7511);
    _7462();
}
function _7519()
{
    for (let _754 = 0; _754 < _7461.length; _754++)
    {
        let _456 = _7461[_754];
        if (_456._7159 == F("厚度"))
        {
            return;
        }
    }
    _7461.push(_7520);
    _7462();
}
function _7521()
{
    let files;
    files = _506.files;
    let length;
    length = files.length;
    if (length < 1)
        return;
    let _6532;
    _6532 = files[0];
    let _682;
    _682 = new FileReader();
    _682.onload = function (buffer)
    {
        let _588;
        _588 = buffer.target.result;
        let _7511;
        _7511 = _1892._7151(_588);
        if (_7511)
        {
            _7461.push(_7511);
            _7462();
        }
    };
    _682.readAsText(_6532);
    _506.value = "";
}


function _7522(_754)
{
    _7461[_754]._7161 = F("全频段厚度同一");
    _7462();
}
function _7523(_754)
{
    _7461[_754]._7161 = F("不同频段厚度不同");
    _7462();
}
function _7524(_754)
{
    _7461[_754]._6939 = false;
    _7462();
}
function _7525(_754)
{
    _7461[_754]._6939 = true;
    _7462();
}
function _7526(_754)
{
    let _456;
    _456 = _7461[_754];
    let _985 = new Object();
    _985._7147 = _456._7147;
    _985._6939 = _456._6939;
    _1892._7275 = JSON.stringify(_985);
    _7462();
}
function _7527(_754)
{
    if (!_1892._7275)
        return;
    let _985;
    _985 = JSON.parse(_1892._7275);
    let _456;
    _456 = _7461[_754];
    _456._7147 = _985._7147;
    _456._6939 = _985._6939;
    _7462();
}
function _7528(_754)
{
    let _456;
    _456 = _7461[_754];
    _1892._7286 = _456._1795;
    _7462();
}
function _7529(_754)
{
    if (_1892._7286===null)
        return;
    let _456;
    _456 = _7461[_754];
    _456._1795 = _1892._7286;
    _7462();
}

function _7530(_754)
{
    _7461[_754]._7282 = false;
    _7462();
}
function _7531(_754)
{
    _7461[_754]._7282 = true;
    _7462();
}
function _7532(_754)
{
    let _456;
    _456 = _7461[_754];
    _1892._7285 = _456._1794;
    _7462();
}
function _7533(_754)
{
    if (!_1892._7285)
        return;
    let _456;
    _456 = _7461[_754];
    _456._1794 = _1892._7285;
    _7462();
}

function _7534(_754)
{
    let _456;
    _456 = _7461[_754];
    _456._7280 = true;
    
    let _7535;
    _7535 = JSON.parse(_456._7278);
    _7535[F("最小值x")] = 0;
    _7535[F("最大值x")] = _1892._7183;
    let _7065;
    _7065 = _7535[F("控制点数组")];
    let _7536;
    _7536 = _1892._7183;
    _7536 /= _929._6338 / 2;
    for (let _754 = 0; _754 < _7065.length; _754++)
    {
        let _7093;
        _7093 = _7065[_754];
        _7093[F("m开始x")] = _7093[F("m开始x")] * _7536;
        _7093[F("m峰的x")] = _7093[F("m峰的x")] * _7536;
        _7093[F("m结束x")] = _7093[F("m结束x")] * _7536;
    }
    _456._7278 = JSON.stringify(_7535);
    _7462();
}
function _7537(_754)
{
    let _456;
    _456 = _7461[_754];
    _456._7280 = false;
    
    let _7535;
    _7535 = JSON.parse(_456._7278);
    _7535[F("最小值x")] = 0;
    _7535[F("最大值x")] = _929._6338 / 2;
    let _7065;
    _7065 = _7535[F("控制点数组")];
    let _7536;
    _7536 = _929._6338 / 2;
    _7536 /= _1892._7183;
    for (let _754 = 0; _754 < _7065.length; _754++)
    {
        let _7093;
        _7093 = _7065[_754];
        _7093[F("m开始x")] = _7093[F("m开始x")] * _7536;
        _7093[F("m峰的x")] = _7093[F("m峰的x")] * _7536;
        _7093[F("m结束x")] = _7093[F("m结束x")] * _7536;
    }
    _456._7278 = JSON.stringify(_7535);
    _7462();
}
function _7538(_754)
{
    let _456;
    _456 = _7461[_754];
    let _985 = new Object();
    _985._7282 = _456._7282;
    _985._7283 = _456._7283;
    _985._7284 = _456._7284;
    _1892._7281 = JSON.stringify(_985);
    _7462();
}
function _7539(_754)
{
    if (!_1892._7281)
        return;
    let _985;
    _985 = JSON.parse(_1892._7281);
    let _456;
    _456 = _7461[_754];
    _456._7282 = _985._7282;
    _456._7283 = _985._7283;
    _456._7284 = _985._7284;
    _7462();
}

function _7540(_754)
{
    let _456 = _7461[_754];
    function _987(_623) { _456._7278 = _623; }
    _7541();
    let _7542;
    _7542 = JSON.parse(_7155._7279);
    if (_456._7280)
    {
        _501.contentWindow._7001(_456._7278, _987, 0, _1892._7183, _7542[F("最小值y")], _7542[F("最大值y")], _7542[F("只能为正")], null, null, null, _1892._7287, _1892._7288, _1892._7289, _1892._7290, "200 100 100", _1892._7183);
    }
    else
    {
        let _7543;
        _7543 = _929._6338 / 2;
        let _7172;
        _7172 = new Array(17);
        for (let _754 = 0; _754 < _7172.length; _754++)
            _7172[_754] = (_7543 * _754 / (_7172.length - 1)).toFixed(1) + "Hz";
        _501.contentWindow._7001(_456._7278, _987, 0, _7543, _7542[F("最小值y")], _7542[F("最大值y")], _7542[F("只能为正")], _7172, null, null, _1892._7287, _1892._7288, _1892._7289, _1892._7290, "200 100 100", 80);
    }
}
function _7544(_754)
{
    let _456;
    _456 = _7461[_754];
    _1892._7276 = _456._7278;
    _1892._7277 = _456._7280;
    _7462();
}
function _7545(_754)
{
    if (!_1892._7276)
        return;
    let _456;
    _456 = _7461[_754];
    _456._7278 = _1892._7276;
    _456._7280  = _1892._7277;
    _7462();
}

function _7546(_754)
{
    let _456 = _7461[_754];
    function _987(_623) { _456._7163 = _623; }
    _7541();
    let _7542;
    _7542 = JSON.parse(_7155._7294);
    _501.contentWindow._7001(_456._7163, _987, 0, _1892._7183, _7542[F("最小值y")], _7542[F("最大值y")], _7542[F("只能为正")], null, null, null, _7155._7295, _7155._7295, _7155._7296, _7155._7297, "150 150 0", _1892._7183);
}
function _7547(_754)
{
    let _456 = _7461[_754];
    function _987(_623) { _456._7343 = _623; }
    _7541();
    let _7542;
    _7542 = JSON.parse(_7292._7344);
    _501.contentWindow._7001(_456._7343, _987, 0, _1892._7183, _7542[F("最小值y")], _7542[F("最大值y")], _7542[F("只能为正")], null, null, null, _7292._7345, _7292._7345, _7292._7156 + " -- " + _7292._7346, _7292._7157 + "<br/>\r\n" + _7292._7347, "100 180 0", _1892._7183);
}
function _7548(_754)
{
    let _456 = _7461[_754];
    function _987(_623) { _456._7419 = _623; }
    _7549();
    let _7542;
    _7542 = JSON.parse(_7293._7420);
    _499.contentWindow._7001(_456._7419, _987, _7542[F("最小值")], _7542[F("最大值")], _7293._7421, _7293._7422, null, _7293._7156 + " -- " + _7293._7423, _7293._7157 + "<br/>\r\n" + _7293._7424, "255 0 0", null, 0, null);
}
function _7550(_754)
{
    let _456 = _7461[_754];
    function _987(_623) { _456._7426 = _623; }
    _7549();
    let _7542;
    _7542 = JSON.parse(_7293._7427);
    _499.contentWindow._7001(_456._7426, _987, _7542[F("最小值")], _7542[F("最大值")], _7293._7428, _7293._7429, null, _7293._7156 + " -- " + _7293._7430, _7293._7157 + "<br/>\r\n" + _7293._7431, "200 0 100", null, 0, null);
}
function _7551(_754)
{
    let _456 = _7461[_754];
    function _987(_623) { _456._7433 = _623; }
    _7549();
    let _7542;
    _7542 = JSON.parse(_7293._7434);
    _499.contentWindow._7001(_456._7433, _987, _7542[F("最小值")], _7542[F("最大值")], _7293._7435, _7293._7436, null, _7293._7156 + " -- " + _7293._7437, _7293._7157 + "<br/>\r\n" + _7293._7438, "200 0 100", null, 20, _7478._7128.bind(_7478));
}
function _7552(_754)
{
    let _456 = _7461[_754];
    function _987(_623) { _456._7440 = _623; }
    _7553();
    let _7542;
    _7542 = JSON.parse(_7293._7441);
    _500.contentWindow._7001(_456._7440, _987, _7542[F("最小值")], _7542[F("最大值")], _7542[F("上下对称")], _7293._7442, _7293._7443, null, _7293._7156 + " -- " + _7293._7444, _7293._7157 + "<br/>\r\n" + _7293._7445, "255 0 0");
}
function _7554(_754)
{
    let _456 = _7461[_754];
    function _987(_623) { _456._7447 = _623; }
    _7549();
    let _7542;
    _7542 = JSON.parse(_7293._7448);
    _499.contentWindow._7001(_456._7447, _987, _7542[F("最小值")], _7542[F("最大值")], _7293._7449, _7293._7450, null, _7293._7156 + " -- " + _7293._7451, _7293._7157 + "<br/>\r\n" + _7293._7452, "200 0 100", null, 0, null);
}
function _7555(_754)
{
    let _456 = _7461[_754];
    function _987(_623) { _456._7454 = _623; }
    _7549();
    let _7542;
    _7542 = JSON.parse(_7293._7455);
    _499.contentWindow._7001(_456._7454, _987, _7542[F("最小值")], _7542[F("最大值")], _7293._7456, _7293._7457, null, _7293._7156 + " -- " + _7293._7458, _7293._7157 + "<br/>\r\n" + _7293._7459, "200 0 100", null, 60, _7478._518.bind(_7478));
}

