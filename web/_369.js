class _1146
{
	static _612()
    {
		let _445;
		_923._612();
		_445 = _923._445;
		let _824;
		_824 = "";
		let _1236;
		_1236 = _1141._1654(_445);

		_824 += "<span style='display: inline-block; text-align: center;'>\r\n";
		for (let _754 = 0; _754 < _1236.length; _754++)
		{
			let _2262;
			_2262 = _1236[_754];
			let _358;
			_358 = _2262._1657;
			let _1579;
			_1579 = _358._1640;
			let _5989;
			_5989 = _358._1688();
			_824 += "<span style='background-color: RGB(188 206 212 / 0.85);'>" + _1579 + "</span>";
			if (_754 == _1236.length - 1)
				continue;
			if (!_2262._2317._2319)
			{
				let _913;
				if (_5989 == "")
					_913 = "&nbsp;";
				else
					_913 = _5989;
				_824 += "<span title='" + L("分成两个节拍") + "' style='background-color: RGB(188 206 212 / 0.6); cursor: pointer;' onclick='_1146._5991(" + _2262._2141 + ",true);'>" + _913 + "</span>";
			}
			else
			{
				let _2746;
				let _2747;
				_2746 = _2748._2749(_1236, _754, '_7752', eval(_1410("_2747")));
				if ((!_2746) || _2747)
				{
					let _913;
					if (_5989 == "")
					{
						if (_2747)
							_913 = _2746;
						else
							_913 = "&emsp;";
					}
					else
					{
						_913 = "-&nbsp;";
					}
					_824 += "<span title='" + L("合成一个节拍") + "' style='cursor: pointer;' onclick='_1146._5991(" + _2262._2141 + ", false);' >" + _913 + "</span>";
				}
				else
				{
					let _913;
					_913 = "";
					if (_2746)
						_913 += _2746;
					if (_2262._5990)
						_913 += _2262._5990;
					_824 += "<span title='" + L("固定节拍结束，&#10;因为后面有休止符。") + "' style='background-color: RGB(150 150 150 / 0.2);' >" + _913 + "</span>";
				}
			}
		}
		_824 += "<br/>\r\n";
		_824 += "<br/>\r\n";
		_824 += "<span title='" + L("配置节拍，节拍内有相同的背景色，节拍之间用空格隔开") + "' style='display:inline-block;text-align:center;width:100%;' >" + L("节拍") + "</span>\r\n";
		_824 += "</span>\r\n";

		_178.innerHTML = _824;
	}
	static _5991(_1578, _5991)
	{
		let _445;
		_923._612();
		_445 = _923._445;
		let _1681 = _445._1164;
		let _455 = _1681[_1578];
		_455._5992._2319 = _5991;
		_1146._612();
	}
}

