class _1269  
{
	static _1270=20;
	_1271()
	{

	}
	_1272(_1273)
	{
		let _1270=_1269._1270;
		let _1271=this._1271;
		let _1274=this._1274;

		
		
		
		this._1275=_1273;
		let _1276;
		_1276=_1273*(_1273+1);
		_1274.length=_1276;
		for(let _570=0;_570<_1276;_570++)
			_1274[_570]=0;
	}
	_1277()
	{
		let _1278=this._1278;

		let _1279;
		let _1280;
		for(_1279=0;_1279<_1275;_1279++)
		{
			let _1267="";
			for(_1280=0;_1280<=_1275;_1280++)
				_1267+=_1281(_1279,_1280)+"\t";
			;
		}
		;
	}
	_693(_1279,_1280,x)
	{
		let _1274=this._1274;
		let _1275=this._1275;
		_1274[_1279*(_1275+1)+_1280]=x;
	};
	_1278(_1279,_1280)
	{
		let _1274=this._1274;
		let _1275=this._1275;
		return _1274[_1279*(_1275+1)+_1280];
	};
	_1282( _1279)
	{
		let _1274=this._1274;
		let _1275=this._1275;
		return _1274[_1279*(_1275+1)+_1275];
	};
	_1283(_1279,x)
	{
		let _1274=this._1274;
		let _1275=this._1275;
		_1274[_1279*(_1275+1)+_1275]=x;
	}
	_1274=new Array();
	_1275=0;
	
	
	_1040(x)
	{

		let _1277=this._1277;
		let _1284=Math.abs;
		let _1275=this._1275;


		
		let  _1279,_1280,_1285,_1286;
		let  _1287;
		for(_1285=0;_1285<=_1275-2;_1285++)
		{
			_1287=_1284(this._1278(_1285,_1285));
			_1286=_1285;
			for(_1279=_1285;_1279<=_1275-1;_1279++)
			{
				if(_1284(this._1278(_1279,_1285))>_1287)
				{
					_1286=_1279;
					_1287=_1284(this._1278(_1279,_1285));
				}
			}
			if(this._1278(_1286,_1285)==0)
			{
				if(this._1278(_1286,_1275)==0)
					continue;
				else
					return false;
			}
			for(_1280=0;_1280<=_1275;_1280++)
			{
				_1287=this._1278(_1285,_1280);
				this._693(_1285,_1280,this._1278(_1286,_1280));
				this._693(_1286,_1280,_1287);
			}
			for(_1279=_1285+1;_1279<=_1275-1;_1279++)
			{
				this._693(_1279,_1285,this._1278(_1279,_1285)/this._1278(_1285,_1285));
				for(_1280=_1285+1;_1280<=_1275;_1280++)
					this._693(_1279,_1280,this._1278(_1279,_1280)-(this._1278(_1279,_1285)*this._1278(_1285,_1280)));
			}
			
		}
		
		if(this._1278(_1275-1,_1275-1))
			this._1283(_1275-1,this._1282(_1275-1)/this._1278(_1275-1,_1275-1));
		else
			this._1283(_1275-1,0);
		for(_1285=_1275-2;_1285>=0;_1285--)
		{
			_1287=0;
			for(_1280=_1285+1;_1280<=_1275-1;_1280++)
				
				
				
				
				_1287+=(this._1278(_1285,_1280)*this._1282(_1280));
			
			if(this._1278(_1285,_1285))
				this._1283(_1285,(this._1282(_1285)-_1287)/this._1278(_1285,_1285));
			else
				this._1283(_1285,0);
			
		}

		for(_1279=0;_1279<_1275;_1279++)
			x[_1279]=this._1282(_1279);

		return true;
	}
	constructor()
	{
	}
};



